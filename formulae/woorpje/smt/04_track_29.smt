(set-logic QF_S)
(declare-fun B () String)
(declare-fun A () String)
(assert (= (str.++  A B "a")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  A "aaaaaaaaa" "") ))
(assert (= (str.++  A B "a")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  A B "a")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  A B "a")  (str.++  B "aaaaaaaaaaa" "") ))
(assert (= (str.++  "aaaaaaaa" B "aaa")  (str.++  B A "a") ))
(assert (= (str.++  "aaaaaaaaaaaaaaaaaaa" "")  (str.++  B B "aaa") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  A "aaaaaaaaa" "") ))
(assert (= (str.++  B B "aaa")  (str.++  B B "aaa") ))
(assert (= (str.++  A B "a")  (str.++  "aaaaaaaaaaaaaaaaaaa" "") ))
(assert (= (str.++  "aaaaaaaa" B "aaa")  (str.++  B B "aaa") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  B B "aaa") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  B B "aaa") ))
(assert (= (str.++  B "aaaaaaaaaaa" "")  (str.++  B "aaaaaaaaaaa" "") ))
(assert (= (str.++  "aaaaaaaa" B "aaa")  (str.++  "aaaaaaaaaaaaaaaaaaa" "") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  B B "aaa")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  A B "a")  (str.++  B B "aaa") ))
(assert (= (str.++  B B "aaa")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  "aaaaaaaa" B "aaa")  (str.++  B A "a") ))
(assert (= (str.++  B "aaaaaaaaaaa" "")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  A B "a")  (str.++  B "aaaaaaaaaaa" "") ))
(assert (= (str.++  B B "aaa")  (str.++  "aaaaaaaaaaaaaaaaaaa" "") ))
(assert (= (str.++  B B "aaa")  (str.++  B B "aaa") ))
(assert (= (str.++  A B "a")  (str.++  "aaaaaaaaaaaaaaaaaaa" "") ))
(assert (= (str.++  A B "a")  (str.++  B "aaaaaaaaaaa" "") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  "aaaaaaaa" B "aaa")  (str.++  "aaaaaaaaaaaaaaaaaaa" "") ))
(assert (= (str.++  A B "a")  (str.++  B B "aaa") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  A B "a")  (str.++  A "aaaaaaaaa" "") ))
(assert (= (str.++  A B "a")  (str.++  A "aaaaaaaaa" "") ))
(assert (= (str.++  B B "aaa")  (str.++  "aaaaaaaaaaaaaaaaaaa" "") ))
(assert (= (str.++  B B "aaa")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  B "aaaaaaaaaaa" "")  (str.++  B "aaaaaaaaaaa" "") ))
(assert (= (str.++  A B "a")  (str.++  B B "aaa") ))
(assert (= (str.++  "aaaaaaaaaaaaaaaaaaa" "")  (str.++  A "aaaaaaaaa" "") ))
(assert (= (str.++  "aaaaaaaaaaaaaaaaaaa" "")  (str.++  B A "a") ))
(assert (= (str.++  A B "a")  (str.++  "aaaaaaaaaaaaaaaaaaa" "") ))
(assert (= (str.++  B "aaaaaaaaaaa" "")  (str.++  B "aaaaaaaaaaa" "") ))
(assert (= (str.++  B B "aaa")  (str.++  B "aaaaaaaaaaa" "") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  B B "aaa") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  "aaaaaaaa" B "aaa")  (str.++  "aaaaaaaaaaaaaaaaaaa" "") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  A B "a")  (str.++  B B "aaa") ))
(assert (= (str.++  "aaaaaaaaaaaaaaaaaaa" "")  (str.++  A "aaaaaaaaa" "") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  B "aaaaaaaaaaa" "") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  B A "a") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  "aaaaaaaaaaaaaaaaaaa" "") ))
(assert (= (str.++  A B "a")  (str.++  B B "aaa") ))
(assert (= (str.++  A "aaaaaaaaa" "")  (str.++  "aaaaaaaa" B "aaa") ))
(assert (= (str.++  "aaaaaaaa" B "aaa")  (str.++  "aaaaaaaa" B "aaa") ))
(check-sat)
(get-model)
