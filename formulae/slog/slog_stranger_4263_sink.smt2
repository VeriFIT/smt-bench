(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun sigmaStar_5 () String)
(declare-fun sigmaStar_6 () String)
(declare-fun sigmaStar_7 () String)
(declare-fun sigmaStar_8 () String)
(declare-fun sigmaStar_9 () String)
(declare-fun sigmaStar_10 () String)
(declare-fun sigmaStar_11 () String)
(declare-fun sigmaStar_12 () String)
(declare-fun sigmaStar_13 () String)
(declare-fun sigmaStar_14 () String)
(declare-fun sigmaStar_15 () String)
(declare-fun sigmaStar_16 () String)
(declare-fun sigmaStar_17 () String)
(declare-fun sigmaStar_18 () String)
(declare-fun sigmaStar_19 () String)
(declare-fun sigmaStar_20 () String)
(declare-fun sigmaStar_21 () String)
(declare-fun sigmaStar_22 () String)
(declare-fun literal_23 () String)
(declare-fun x_24 () String)
(declare-fun literal_25 () String)
(declare-fun x_26 () String)
(declare-fun x_27 () String)
(declare-fun literal_28 () String)
(declare-fun x_29 () String)
(declare-fun x_30 () String)
(declare-fun sigmaStar_31 () String)
(declare-fun literal_32 () String)
(declare-fun x_35 () String)
(declare-fun literal_34 () String)
(declare-fun x_38 () String)
(declare-fun x_39 () String)
(declare-fun literal_33 () String)
(declare-fun x_40 () String)
(declare-fun sigmaStar_41 () String)
(declare-fun literal_42 () String)
(declare-fun x_44 () String)
(declare-fun x_45 () String)
(declare-fun literal_43 () String)
(declare-fun x_47 () String)
(declare-fun x_48 () String)
(declare-fun x_49 () String)
(declare-fun literal_50 () String)
(declare-fun x_51 () String)
(declare-fun x_52 () String)
(declare-fun x_53 () String)
(declare-fun x_54 () String)
(declare-fun literal_56 () String)
(declare-fun x_57 () String)
(declare-fun literal_55 () String)
(declare-fun x_65 () String)
(declare-fun literal_64 () String)
(declare-fun x_67 () String)
(declare-fun literal_60 () String)
(declare-fun literal_61 () String)
(declare-fun literal_59 () String)
(declare-fun literal_58 () String)
(declare-fun x_69 () String)
(declare-fun literal_68 () String)
(declare-fun x_70 () String)
(declare-fun literal_73 () String)
(declare-fun x_77 () String)
(declare-fun x_78 () String)
(declare-fun literal_76 () String)
(declare-fun x_80 () String)
(declare-fun literal_74 () String)
(declare-fun literal_71 () String)
(declare-fun literal_72 () String)
(declare-fun x_81 () String)
(declare-fun x_82 () String)
(declare-fun literal_83 () String)
(declare-fun x_84 () String)
(declare-fun x_85 () String)
(declare-fun x_86 () String)
(declare-fun x_87 () String)
(declare-fun literal_88 () String)
(declare-fun x_89 () String)
(assert (= literal_23 "\x3f\x61\x63\x74\x69\x6f\x6e\x3d\x65\x64\x69\x74\x26\x61\x6d\x70\x3b\x66\x6f\x72\x75\x6d\x5f\x69\x64\x3d"))
(assert (= x_24 (str.++ literal_23 sigmaStar_4)))
(assert (= literal_25 "\x26\x61\x6d\x70\x3b\x74\x68\x72\x65\x61\x64\x5f\x69\x64\x3d"))
(assert (= x_26 (str.++ x_24 literal_25)))
(assert (= x_27 (str.++ x_26 sigmaStar_22)))
(assert (= literal_28 "\x26\x61\x6d\x70\x3b\x70\x6f\x73\x74\x5f\x69\x64\x3d"))
(assert (= x_29 (str.++ x_27 literal_28)))
(assert (= x_30 (str.++ x_29 sigmaStar_13)))
(assert (= literal_32 "\x20\x65\x6e\x63\x74\x79\x70\x65\x3d\x6d\x75\x6c\x74\x69\x70\x61\x72\x74\x2f\x66\x6f\x72\x6d\x2d\x64\x61\x74\x61\x27\x3e\x0d\x0a\x3c\x74\x61\x62\x6c\x65\x20\x63\x65\x6c\x6c\x70\x61\x64\x64\x69\x6e\x67\x3d\x27\x30\x27\x20\x63\x65\x6c\x6c\x73\x70\x61\x63\x69\x6e\x67\x3d\x27\x30\x27\x20\x77\x69\x64\x74\x68\x3d\x27\x31\x30\x30\x25\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x62\x6c\x2d\x62\x6f\x72\x64\x65\x72\x27\x3e\x0d\x0a\x3c\x74\x72\x3e\x0d\x0a\x3c\x74\x64\x3e\x0d\x0a\x3c\x74\x61\x62\x6c\x65\x20\x77\x69\x64\x74\x68\x3d\x27\x31\x30\x30\x25\x27\x20\x62\x6f\x72\x64\x65\x72\x3d\x27\x30\x27\x20\x63\x65\x6c\x6c\x73\x70\x61\x63\x69\x6e\x67\x3d\x27\x31\x27\x20\x63\x65\x6c\x6c\x70\x61\x64\x64\x69\x6e\x67\x3d\x27\x30\x27\x3e\x0d\x0a\x3c\x74\x72\x3e\x0d\x0a\x3c\x74\x64\x20\x77\x69\x64\x74\x68\x3d\x27\x31\x34\x35\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x62\x6c\x32\x27\x3e"))
(assert (= x_35 (str.++ x_30 literal_32)))
(assert (= literal_34 "\x3c\x2f\x74\x64\x3e\x0d\x0a\x3c\x74\x64\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x62\x6c\x32\x27\x3e\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x74\x65\x78\x74\x27\x20\x6e\x61\x6d\x65\x3d\x27\x73\x75\x62\x6a\x65\x63\x74\x27\x20\x76\x61\x6c\x75\x65\x3d\x27"))
(assert (or (= x_38 sigmaStar_8) (= x_38 sigmaStar_14) (= x_38 sigmaStar_20) (= x_38 sigmaStar_1)))
(assert (= x_39 (str.++ literal_34 x_38)))
(assert (= literal_33 "\x3c\x66\x6f\x72\x6d\x20\x6e\x61\x6d\x65\x3d\x27\x69\x6e\x70\x75\x74\x66\x6f\x72\x6d\x27\x20\x6d\x65\x74\x68\x6f\x64\x3d\x27\x70\x6f\x73\x74\x27\x20\x61\x63\x74\x69\x6f\x6e\x3d\x27"))
(assert (= x_40 (str.++ literal_33 x_35)))
(assert (= literal_42 "\x20\x63\x6c\x61\x73\x73\x3d\x74\x65\x78\x74\x62\x6f\x78\x27\x20\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d\x27\x32\x35\x35\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x77\x69\x64\x74\x68\x3a\x32\x35\x30\x70\x78\x27\x3e\x3c\x2f\x74\x64\x3e\x0d\x0a\x3c\x2f\x74\x72\x3e\x0d\x0a\x3c\x74\x72\x3e\x0d\x0a\x3c\x74\x64\x20\x76\x61\x6c\x69\x67\x6e\x3d\x27\x74\x6f\x70\x27\x20\x77\x69\x64\x74\x68\x3d\x27\x31\x34\x35\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x62\x6c\x32\x27\x3e"))
(assert (= x_44 (str.++ x_39 literal_42)))
(assert (= x_45 (str.++ x_40 sigmaStar_16)))
(assert (= literal_43 "\x3c\x2f\x74\x64\x3e\x0d\x0a\x3c\x74\x64\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x62\x6c\x31\x27\x3e\x3c\x74\x65\x78\x74\x61\x72\x65\x61\x20\x6e\x61\x6d\x65\x3d\x27\x6d\x65\x73\x73\x61\x67\x65\x27\x20\x63\x6f\x6c\x73\x3d\x27\x38\x30\x27\x20\x72\x6f\x77\x73\x3d\x27\x31\x35\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x65\x78\x74\x62\x6f\x78\x27\x3e"))
(assert (or (= x_47 sigmaStar_9) (= x_47 sigmaStar_21) (= x_47 sigmaStar_3)))
(assert (= x_48 (str.++ literal_43 x_47)))
(assert (= x_49 (str.++ x_45 x_44)))
(assert (= literal_50 "\x3c\x2f\x74\x65\x78\x74\x61\x72\x65\x61\x3e\x3c\x2f\x74\x64\x3e\x0d\x0a\x3c\x2f\x74\x72\x3e\x0d\x0a\x3c\x74\x72\x3e\x0d\x0a\x3c\x74\x64\x20\x77\x69\x64\x74\x68\x3d\x27\x31\x34\x35\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x62\x6c\x32\x27\x3e\x26\x6e\x62\x73\x70\x3b\x3c\x2f\x74\x64\x3e\x0d\x0a\x3c\x74\x64\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x62\x6c\x32\x27\x3e\x0d\x0a\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x62\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x66\x6f\x6e\x74\x2d\x77\x65\x69\x67\x68\x74\x3a\x62\x6f\x6c\x64\x3b\x77\x69\x64\x74\x68\x3a\x32\x35\x70\x78\x3b\x27\x20\x6f\x6e\x43\x6c\x69\x63\x6b\x3d\x5c\x22\x61\x64\x64\x54\x65\x78\x74\x28\x27\x6d\x65\x73\x73\x61\x67\x65\x27\x2c\x20\x27\x5b\x62\x5d\x27\x2c\x20\x27\x5b\x2f\x62\x5d\x27\x29\x3b\x5c\x22\x3e\x0d\x0a\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x69\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x66\x6f\x6e\x74\x2d\x73\x74\x79\x6c\x65\x3a\x69\x74\x61\x6c\x69\x63\x3b\x77\x69\x64\x74\x68\x3a\x32\x35\x70\x78\x3b\x27\x20\x6f\x6e\x43\x6c\x69\x63\x6b\x3d\x5c\x22\x61\x64\x64\x54\x65\x78\x74\x28\x27\x6d\x65\x73\x73\x61\x67\x65\x27\x2c\x20\x27\x5b\x69\x5d\x27\x2c\x20\x27\x5b\x2f\x69\x5d\x27\x29\x3b\x5c\x22\x3e\x0d\x0a\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x75\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x74\x65\x78\x74\x2d\x64\x65\x63\x6f\x72\x61\x74\x69\x6f\x6e\x3a\x75\x6e\x64\x65\x72\x6c\x69\x6e\x65\x3b\x77\x69\x64\x74\x68\x3a\x32\x35\x70\x78\x3b\x27\x20\x6f\x6e\x43\x6c\x69\x63\x6b\x3d\x5c\x22\x61\x64\x64\x54\x65\x78\x74\x28\x27\x6d\x65\x73\x73\x61\x67\x65\x27\x2c\x20\x27\x5b\x75\x5d\x27\x2c\x20\x27\x5b\x2f\x75\x5d\x27\x29\x3b\x5c\x22\x3e\x0d\x0a\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x75\x72\x6c\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x77\x69\x64\x74\x68\x3a\x33\x30\x70\x78\x3b\x27\x20\x6f\x6e\x43\x6c\x69\x63\x6b\x3d\x5c\x22\x61\x64\x64\x54\x65\x78\x74\x28\x27\x6d\x65\x73\x73\x61\x67\x65\x27\x2c\x20\x27\x5b\x75\x72\x6c\x5d\x27\x2c\x20\x27\x5b\x2f\x75\x72\x6c\x5d\x27\x29\x3b\x5c\x22\x3e\x0d\x0a\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x6d\x61\x69\x6c\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x77\x69\x64\x74\x68\x3a\x33\x35\x70\x78\x3b\x27\x20\x6f\x6e\x43\x6c\x69\x63\x6b\x3d\x5c\x22\x61\x64\x64\x54\x65\x78\x74\x28\x27\x6d\x65\x73\x73\x61\x67\x65\x27\x2c\x20\x27\x5b\x6d\x61\x69\x6c\x5d\x27\x2c\x20\x27\x5b\x2f\x6d\x61\x69\x6c\x5d\x27\x29\x3b\x5c\x22\x3e\x0d\x0a\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x69\x6d\x67\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x77\x69\x64\x74\x68\x3a\x33\x30\x70\x78\x3b\x27\x20\x6f\x6e\x43\x6c\x69\x63\x6b\x3d\x5c\x22\x61\x64\x64\x54\x65\x78\x74\x28\x27\x6d\x65\x73\x73\x61\x67\x65\x27\x2c\x20\x27\x5b\x69\x6d\x67\x5d\x27\x2c\x20\x27\x5b\x2f\x69\x6d\x67\x5d\x27\x29\x3b\x5c\x22\x3e\x0d\x0a\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x63\x65\x6e\x74\x65\x72\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x77\x69\x64\x74\x68\x3a\x34\x35\x70\x78\x3b\x27\x20\x6f\x6e\x43\x6c\x69\x63\x6b\x3d\x5c\x22\x61\x64\x64\x54\x65\x78\x74\x28\x27\x6d\x65\x73\x73\x61\x67\x65\x27\x2c\x20\x27\x5b\x63\x65\x6e\x74\x65\x72\x5d\x27\x2c\x20\x27\x5b\x2f\x63\x65\x6e\x74\x65\x72\x5d\x27\x29\x3b\x5c\x22\x3e\x0d\x0a\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x73\x6d\x61\x6c\x6c\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x77\x69\x64\x74\x68\x3a\x34\x30\x70\x78\x3b\x27\x20\x6f\x6e\x43\x6c\x69\x63\x6b\x3d\x5c\x22\x61\x64\x64\x54\x65\x78\x74\x28\x27\x6d\x65\x73\x73\x61\x67\x65\x27\x2c\x20\x27\x5b\x73\x6d\x61\x6c\x6c\x5d\x27\x2c\x20\x27\x5b\x2f\x73\x6d\x61\x6c\x6c\x5d\x27\x29\x3b\x5c\x22\x3e\x0d\x0a\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x63\x6f\x64\x65\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x77\x69\x64\x74\x68\x3a\x34\x30\x70\x78\x3b\x27\x20\x6f\x6e\x43\x6c\x69\x63\x6b\x3d\x5c\x22\x61\x64\x64\x54\x65\x78\x74\x28\x27\x6d\x65\x73\x73\x61\x67\x65\x27\x2c\x20\x27\x5b\x63\x6f\x64\x65\x5d\x27\x2c\x20\x27\x5b\x2f\x63\x6f\x64\x65\x5d\x27\x29\x3b\x5c\x22\x3e\x0d\x0a\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x71\x75\x6f\x74\x65\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x77\x69\x64\x74\x68\x3a\x34\x35\x70\x78\x3b\x27\x20\x6f\x6e\x43\x6c\x69\x63\x6b\x3d\x5c\x22\x61\x64\x64\x54\x65\x78\x74\x28\x27\x6d\x65\x73\x73\x61\x67\x65\x27\x2c\x20\x27\x5b\x71\x75\x6f\x74\x65\x5d\x27\x2c\x20\x27\x5b\x2f\x71\x75\x6f\x74\x65\x5d\x27\x29\x3b\x5c\x22\x3e\x0d\x0a\x3c\x2f\x74\x64\x3e\x0d\x0a\x3c\x2f\x74\x72\x3e\x0d\x0a\x3c\x74\x72\x3e\x0d\x0a\x3c\x74\x64\x20\x77\x69\x64\x74\x68\x3d\x27\x31\x34\x35\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x62\x6c\x32\x27\x3e\x26\x6e\x62\x73\x70\x3b\x3c\x2f\x74\x64\x3e\x0d\x0a\x3c\x74\x64\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x62\x6c\x31\x27\x3e\x0d\x0a"))
(assert (= x_51 (str.++ x_48 literal_50)))
(assert (= x_52 (str.++ x_49 sigmaStar_17)))
(assert (= x_53 (str.++ x_52 x_51)))
(assert (= x_54 (str.++ x_53 sigmaStar_12)))
(assert (= literal_56 "\x3c\x73\x65\x6c\x65\x63\x74\x20\x6e\x61\x6d\x65\x3d\x27\x62\x62\x63\x6f\x6c\x6f\x72\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x65\x78\x74\x62\x6f\x78\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x77\x69\x64\x74\x68\x3a\x39\x30\x70\x78\x3b\x27\x20\x6f\x6e\x43\x68\x61\x6e\x67\x65\x3d\x22\x61\x64\x64\x54\x65\x78\x74\x28\x27\x6d\x65\x73\x73\x61\x67\x65\x27\x2c\x20\x27\x5b\x63\x6f\x6c\x6f\x72\x3d\x27\x20\x2b\x20\x74\x68\x69\x73\x2e\x6f\x70\x74\x69\x6f\x6e\x73\x5b\x74\x68\x69\x73\x2e\x73\x65\x6c\x65\x63\x74\x65\x64\x49\x6e\x64\x65\x78\x5d\x2e\x76\x61\x6c\x75\x65\x20\x2b\x20\x27\x5d\x27\x2c\x20\x27\x5b\x2f\x63\x6f\x6c\x6f\x72\x5d\x27\x29\x3b\x74\x68\x69\x73\x2e\x73\x65\x6c\x65\x63\x74\x65\x64\x49\x6e\x64\x65\x78\x3d\x30\x3b\x22\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x27\x3e\x44\x65\x66\x61\x75\x6c\x74\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x6d\x61\x72\x6f\x6f\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x6d\x61\x72\x6f\x6f\x6e\x3b\x27\x3e\x4d\x61\x72\x6f\x6f\x6e\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x72\x65\x64\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x72\x65\x64\x3b\x27\x3e\x52\x65\x64\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x6f\x72\x61\x6e\x67\x65\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x6f\x72\x61\x6e\x67\x65\x3b\x27\x3e\x4f\x72\x61\x6e\x67\x65\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x62\x72\x6f\x77\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x62\x72\x6f\x77\x6e\x3b\x27\x3e\x42\x72\x6f\x77\x6e\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x79\x65\x6c\x6c\x6f\x77\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x79\x65\x6c\x6c\x6f\x77\x3b\x27\x3e\x59\x65\x6c\x6c\x6f\x77\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x67\x72\x65\x65\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x67\x72\x65\x65\x6e\x3b\x27\x3e\x47\x72\x65\x65\x6e\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x6c\x69\x6d\x65\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x6c\x69\x6d\x65\x3b\x27\x3e\x4c\x69\x6d\x65\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x6f\x6c\x69\x76\x65\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x6f\x6c\x69\x76\x65\x3b\x27\x3e\x4f\x6c\x69\x76\x65\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x63\x79\x61\x6e\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x63\x79\x61\x6e\x3b\x27\x3e\x43\x79\x61\x6e\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x62\x6c\x75\x65\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x62\x6c\x75\x65\x3b\x27\x3e\x42\x6c\x75\x65\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x6e\x61\x76\x79\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x6e\x61\x76\x79\x3b\x27\x3e\x4e\x61\x76\x79\x20\x42\x6c\x75\x65\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x70\x75\x72\x70\x6c\x65\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x70\x75\x72\x70\x6c\x65\x3b\x27\x3e\x50\x75\x72\x70\x6c\x65\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x76\x69\x6f\x6c\x65\x74\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x76\x69\x6f\x6c\x65\x74\x3b\x27\x3e\x56\x69\x6f\x6c\x65\x74\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x62\x6c\x61\x63\x6b\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x62\x6c\x61\x63\x6b\x3b\x27\x3e\x42\x6c\x61\x63\x6b\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x67\x72\x61\x79\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x67\x72\x61\x79\x3b\x27\x3e\x47\x72\x61\x79\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x73\x69\x6c\x76\x65\x72\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x73\x69\x6c\x76\x65\x72\x3b\x27\x3e\x53\x69\x6c\x76\x65\x72\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x6f\x70\x74\x69\x6f\x6e\x20\x76\x61\x6c\x75\x65\x3d\x27\x77\x68\x69\x74\x65\x27\x20\x73\x74\x79\x6c\x65\x3d\x27\x63\x6f\x6c\x6f\x72\x3a\x77\x68\x69\x74\x65\x3b\x27\x3e\x57\x68\x69\x74\x65\x3c\x2f\x6f\x70\x74\x69\x6f\x6e\x3e\x0d\x0a\x3c\x2f\x73\x65\x6c\x65\x63\x74\x3e\x0d\x0a\x3c\x2f\x74\x64\x3e\x0d\x0a\x3c\x2f\x74\x72\x3e\x0d\x0a\x3c\x74\x72\x3e\x0d\x0a\x3c\x74\x64\x20\x77\x69\x64\x74\x68\x3d\x27\x31\x34\x35\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x62\x6c\x32\x27\x3e\x26\x6e\x62\x73\x70\x3b\x3c\x2f\x74\x64\x3e\x0d\x0a\x3c\x74\x64\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x62\x6c\x32\x27\x3e\x0d\x0a"))
(assert (= x_57 (str.++ x_54 literal_56)))
(assert (= literal_55 "\x6d\x65\x73\x73\x61\x67\x65"))
(assert (= x_65 (str.++ x_57 literal_55)))
(assert (= literal_64 "\x3c\x2f\x74\x64\x3e\x0d\x0a\x3c\x74\x64\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x62\x6c\x31\x27\x3e\x0d\x0a\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x63\x68\x65\x63\x6b\x62\x6f\x78\x27\x20\x6e\x61\x6d\x65\x3d\x27\x64\x69\x73\x61\x62\x6c\x65\x5f\x73\x6d\x69\x6c\x65\x79\x73\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x31\x27"))
(assert (= literal_60 "\x20\x63\x68\x65\x63\x6b\x65\x64"))
(assert (= literal_61 ""))
(assert (= literal_59 "\x20\x63\x68\x65\x63\x6b\x65\x64"))
(assert (= literal_58 ""))
(assert (or (= x_67 literal_60) (= x_67 literal_61) (= x_67 literal_59) (= x_67 sigmaStar_0) (= x_67 literal_58)))
(assert (= x_69 (str.++ literal_64 x_67)))
(assert (= literal_68 "\x0d\x0a\x3c\x2f\x74\x64\x3e\x0d\x0a\x3c\x2f\x74\x72\x3e\x0d\x0a\x3c\x74\x72\x3e\x0d\x0a\x3c\x74\x64\x20\x76\x61\x6c\x69\x67\x6e\x3d\x27\x74\x6f\x70\x27\x20\x77\x69\x64\x74\x68\x3d\x27\x31\x34\x35\x27\x20\x63\x6c\x61\x73\x73\x3d\x27\x74\x62\x6c\x32\x27\x3e"))
(assert (= x_70 (str.++ x_65 literal_68)))
(assert (= literal_73 "\x3e"))
(assert (= x_77 (str.++ x_69 literal_73)))
(assert (= x_78 (str.++ x_70 sigmaStar_2)))
(assert (= literal_76 "\x3c\x62\x72\x3e\x0d\x0a\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x63\x68\x65\x63\x6b\x62\x6f\x78\x27\x20\x6e\x61\x6d\x65\x3d\x27\x64\x65\x6c\x65\x74\x65\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x31\x27"))
(assert (= literal_74 ""))
(assert (= literal_71 ""))
(assert (= literal_72 "\x20\x63\x68\x65\x63\x6b\x65\x64"))
(assert (or (= x_80 sigmaStar_18) (= x_80 literal_74) (= x_80 literal_71) (= x_80 literal_72)))
(assert (= x_81 (str.++ literal_76 x_80)))
(assert (= x_82 (str.++ x_78 x_77)))
(assert (= literal_83 "\x3e"))
(assert (= x_84 (str.++ x_81 literal_83)))
(assert (= x_85 (str.++ x_82 sigmaStar_15)))
(assert (= x_86 (str.++ x_85 x_84)))
(assert (= x_87 (str.++ x_86 sigmaStar_5)))
(assert (= literal_88 "\x0d\x0a\x3c\x2f\x74\x64\x3e\x0d\x0a\x3c\x2f\x74\x72\x3e\x5c\x6e"))
(assert (= x_89 (str.++ x_87 literal_88)))
(assert (str.in_re x_89 (re.++ (re.* re.allchar) (re.++ (str.to_re "\x5c\x3c\x53\x43\x52\x49\x50\x54") (re.* re.allchar)))))
(check-sat)
(exit)
