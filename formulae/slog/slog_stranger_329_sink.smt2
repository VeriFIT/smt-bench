(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun x_11 () String)
(declare-fun literal_8 () String)
(declare-fun literal_9 () String)
(declare-fun literal_5 () String)
(declare-fun literal_12 () String)
(declare-fun x_13 () String)
(declare-fun literal_7 () String)
(declare-fun x_14 () String)
(assert (= literal_8 "\x2f"))
(assert (= literal_9 "\x2f"))
(assert (= literal_5 "\x77\x64\x69\x72"))
(assert (or (= x_11 literal_8) (= x_11 literal_9) (= x_11 literal_5)))
(assert (= literal_12 "\x2f"))
(assert (= x_13 (str.++ x_11 literal_12)))
(assert (= literal_7 "\x6e\x61\x6d\x65"))
(assert (= x_14 (str.++ x_13 literal_7)))
(assert (str.in_re x_14 (re.++ (re.* re.allchar) (re.++ (str.to_re "\x2f\x65\x76\x69\x6c") (re.* re.allchar)))))
(check-sat)
(exit)
