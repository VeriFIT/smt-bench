(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun literal_3 () String)
(declare-fun x_4 () String)
(declare-fun literal_2 () String)
(declare-fun x_5 () String)
(declare-fun literal_6 () String)
(declare-fun x_8 () String)
(declare-fun x_9 () String)
(declare-fun literal_7 () String)
(declare-fun x_10 () String)
(declare-fun literal_11 () String)
(declare-fun x_12 () String)
(assert (= literal_3 "\x3c\x66\x72\x61\x6d\x65\x73\x65\x74"))
(assert (= literal_2 ""))
(assert (or (= x_4 literal_2) (= x_4 sigmaStar_1)))
(assert (= x_5 (str.++ literal_3 x_4)))
(assert (= literal_6 "\x3e"))
(assert (= x_8 (str.++ x_5 literal_6)))
(assert (= literal_7 ""))
(assert (or (= x_9 sigmaStar_0) (= x_9 literal_7)))
(assert (= x_10 (str.++ x_8 x_9)))
(assert (= literal_11 "\x3c\x2f\x66\x72\x61\x6d\x65\x73\x65\x74\x3e\x5c\x6e"))
(assert (= x_12 (str.++ x_10 literal_11)))
(assert (str.in_re x_12 (re.++ (re.* re.allchar) (re.++ (str.to_re "\x5c\x3c\x53\x43\x52\x49\x50\x54") (re.* re.allchar)))))
(check-sat)
(exit)
