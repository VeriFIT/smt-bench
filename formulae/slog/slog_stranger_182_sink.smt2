(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun literal_1 () String)
(declare-fun x_2 () String)
(declare-fun literal_3 () String)
(declare-fun x_4 () String)
(declare-fun x_5 () String)
(declare-fun literal_6 () String)
(declare-fun x_7 () String)
(assert (= literal_1 "\x20\x20\x20\x20\x3c\x73\x63\x72\x69\x70\x74\x20\x6c\x61\x6e\x67\x75\x61\x67\x65\x3d\x5c\x22\x4a\x61\x76\x61\x53\x63\x72\x69\x70\x74\x5c\x22\x20\x74\x79\x70\x65\x3d\x5c\x22\x74\x65\x78\x74\x2f\x6a\x61\x76\x61\x73\x63\x72\x69\x70\x74\x5c\x22\x3e\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x77\x69\x6e\x64\x6f\x77\x2e\x6f\x6e\x72\x65\x73\x69\x7a\x65\x20\x3d\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x28\x29\x20\x7b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x65\x73\x69\x7a\x65\x69\x66\x72\x61\x6d\x65\x28"))
(assert (= x_2 (str.++ literal_1 sigmaStar_0)))
(assert (= literal_3 "\x29\x3b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x7d\x3b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x77\x69\x6e\x64\x6f\x77\x2e\x6e\x61\x6d\x65\x3d\x27\x69\x6d\x73\x2d\x63\x70\x2d\x70\x61\x67\x65\x27\x3b\x0d\x0a\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x2f\x2f\x20\x53\x65\x74\x20\x49\x6e\x74\x65\x72\x76\x61\x6c\x20\x75\x6e\x74\x69\x6c\x20\x69\x6d\x73\x2d\x63\x6f\x6e\x74\x65\x6e\x74\x66\x72\x61\x6d\x65\x20\x6f\x72\x20\x69\x6d\x73\x2d\x63\x6f\x6e\x74\x65\x6e\x74\x66\x72\x61\x6d\x65\x2d\x6e\x6f\x2d\x6e\x61\x76\x20\x69\x73\x20\x61\x76\x61\x69\x6c\x61\x62\x6c\x65\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x66\x75\x6e\x63\x74\x69\x6f\x6e\x20\x77\x61\x69\x74\x69\x6e\x67\x28\x29\x20\x7b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x76\x61\x72\x20\x63\x66\x20\x20\x20\x3d\x20\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x67\x65\x74\x45\x6c\x65\x6d\x65\x6e\x74\x42\x79\x49\x64\x28\x27\x69\x6d\x73\x2d\x63\x6f\x6e\x74\x65\x6e\x74\x66\x72\x61\x6d\x65\x27\x29\x3b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x76\x61\x72\x20\x63\x66\x6e\x76\x20\x3d\x20\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x67\x65\x74\x45\x6c\x65\x6d\x65\x6e\x74\x42\x79\x49\x64\x28\x27\x69\x6d\x73\x2d\x63\x6f\x6e\x74\x65\x6e\x74\x66\x72\x61\x6d\x65\x2d\x6e\x6f\x2d\x6e\x61\x76\x27\x29\x3b\x0d\x0a\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x69\x66\x20\x28\x63\x66\x20\x7c\x7c\x20\x63\x66\x6e\x76\x29\x20\x7b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x65\x73\x69\x7a\x65\x69\x66\x72\x61\x6d\x65\x28"))
(assert (= x_4 (str.++ x_2 literal_3)))
(assert (= x_5 (str.++ x_4 sigmaStar_0)))
(assert (= literal_6 "\x29\x3b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x63\x6c\x65\x61\x72\x49\x6e\x74\x65\x72\x76\x61\x6c\x28\x6f\x75\x72\x49\x6e\x74\x65\x72\x76\x61\x6c\x29\x3b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x65\x74\x75\x72\x6e\x20\x74\x72\x75\x65\x3b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x7d\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x72\x65\x74\x75\x72\x6e\x20\x66\x61\x6c\x73\x65\x3b\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x7d\x0d\x0a\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x76\x61\x72\x20\x6f\x75\x72\x49\x6e\x74\x65\x72\x76\x61\x6c\x20\x3d\x20\x73\x65\x74\x49\x6e\x74\x65\x72\x76\x61\x6c\x28\x27\x77\x61\x69\x74\x69\x6e\x67\x28\x29\x27\x2c\x20\x31\x30\x30\x29\x3b\x0d\x0a\x20\x20\x20\x20\x3c\x2f\x73\x63\x72\x69\x70\x74\x3e\x5c\x6e"))
(assert (= x_7 (str.++ x_5 literal_6)))
(assert (str.in_re x_7 (re.++ (re.* re.allchar) (re.++ (str.to_re "\x5c\x3c\x53\x43\x52\x49\x50\x54") (re.* re.allchar)))))
(check-sat)
(exit)
