(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun sigmaStar_5 () String)
(declare-fun sigmaStar_6 () String)
(declare-fun sigmaStar_7 () String)
(declare-fun sigmaStar_8 () String)
(declare-fun sigmaStar_9 () String)
(declare-fun literal_28 () String)
(declare-fun x_29 () String)
(declare-fun literal_27 () String)
(declare-fun literal_23 () String)
(declare-fun x_30 () String)
(declare-fun literal_33 () String)
(declare-fun x_35 () String)
(declare-fun literal_40 () String)
(declare-fun x_42 () String)
(declare-fun sigmaStar_43 () String)
(declare-fun sigmaStar_50 () String)
(declare-fun sigmaStar_51 () String)
(declare-fun literal_53 () String)
(declare-fun x_52 () String)
(declare-fun epsilon () String)
(declare-fun literal_41 () String)
(declare-fun literal_37 () String)
(declare-fun literal_44 () String)
(declare-fun x_54 () String)
(assert (= literal_28 "\x53\x45\x4c\x45\x43\x54\x20\x75\x2e\x2a\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x46\x52\x4f\x4d\x20\x6a\x6f\x75\x72\x6e\x61\x6c\x5f\x65\x6e\x74\x72\x69\x65\x73\x20\x6a\x2c\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x75\x73\x65\x72\x20\x75\x2c\x20\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x75\x73\x65\x72\x5f\x73\x74\x75\x64\x65\x6e\x74\x73\x20\x73\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x57\x48\x45\x52\x45\x20\x6a\x2e\x75\x73\x65\x72\x69\x64\x20\x3d\x20\x75\x2e\x69\x64\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x41\x4e\x44\x20\x73\x2e\x75\x73\x65\x72\x69\x64\x20\x3d\x20\x75\x2e\x69\x64\x20\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x41\x4e\x44\x20"))
(assert (= literal_27 ""))
(assert (= literal_23 "\x73\x2e\x63\x6f\x75\x72\x73\x65\x20\x3d\x20\x27\x27\x20\x41\x4e\x44"))
(assert (or (= x_29 literal_27) (= x_29 literal_23)))
(assert (= x_30 (str.++ literal_28 x_29)))
(assert (= literal_33 "\x20\x6a\x2e\x6a\x6f\x75\x72\x6e\x61\x6c\x20\x3d\x20"))
(assert (= x_35 (str.++ x_30 literal_33)))
(assert (= literal_40 "\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x4f\x52\x44\x45\x52\x20\x42\x59\x20\x6a\x2e\x6d\x6f\x64\x69\x66\x69\x65\x64\x20\x44\x45\x53\x43"))
(assert (= x_42 (str.++ x_35 literal_40)))
(assert (= literal_53 "\x3c\x74\x64\x20\x6e\x6f\x77\x72\x61\x70\x3d\x22\x6e\x6f\x77\x72\x61\x70\x22\x20\x77\x69\x64\x74\x68\x3d\x22\x31\x30\x30\x25\x22\x3e"))
(assert (= epsilon ""))
(assert (= literal_41 "\x53\x45\x4c\x45\x43\x54\x20\x75\x2e\x2a\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x46\x52\x4f\x4d\x20\x6a\x6f\x75\x72\x6e\x61\x6c\x5f\x65\x6e\x74\x72\x69\x65\x73\x20\x6a\x2c\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x75\x73\x65\x72\x20\x75\x2c\x20\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x75\x73\x65\x72\x5f\x74\x65\x61\x63\x68\x65\x72\x73\x20\x74\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x57\x48\x45\x52\x45\x20\x6a\x2e\x75\x73\x65\x72\x69\x64\x20\x3d\x20\x75\x2e\x69\x64\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x41\x4e\x44\x20\x74\x2e\x75\x73\x65\x72\x69\x64\x20\x3d\x20\x75\x2e\x69\x64\x20\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x41\x4e\x44\x20\x6a\x2e\x6a\x6f\x75\x72\x6e\x61\x6c\x20\x3d\x20\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x41\x4e\x44\x20\x74\x2e\x63\x6f\x75\x72\x73\x65\x20\x3d\x20\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x4f\x52\x44\x45\x52\x20\x42\x59\x20\x6a\x2e\x6d\x6f\x64\x69\x66\x69\x65\x64\x20\x44\x45\x53\x43"))
(assert (= literal_37 "\x63\x6f\x75\x72\x73\x65"))
(assert (= literal_44 ""))
(assert (or (= x_52 epsilon) (= x_52 literal_41) (= x_52 x_42) (= x_52 sigmaStar_43) (= x_52 literal_37) (= x_52 literal_44)))
(assert (= x_54 (str.++ literal_53 x_52)))
(assert (str.in_re x_54 (re.++ (re.* re.allchar) (re.++ (str.to_re "\x5c\x3c\x53\x43\x52\x49\x50\x54") (re.* re.allchar)))))
(check-sat)
(exit)
