(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun literal_4 () String)
(declare-fun x_5 () String)
(declare-fun epsilon () String)
(declare-fun x_7 () String)
(declare-fun literal_8 () String)
(declare-fun x_9 () String)
(declare-fun literal_11 () String)
(declare-fun x_12 () String)
(declare-fun literal_14 () String)
(declare-fun x_15 () String)
(declare-fun literal_17 () String)
(declare-fun x_18 () String)
(declare-fun sigmaStar_21 () String)
(declare-fun literal_20 () String)
(declare-fun x_22 () String)
(declare-fun x_24 () String)
(declare-fun sigmaStar_27 () String)
(declare-fun literal_26 () String)
(declare-fun x_28 () String)
(declare-fun x_31 () String)
(declare-fun sigmaStar_34 () String)
(declare-fun literal_33 () String)
(declare-fun x_35 () String)
(declare-fun x_38 () String)
(declare-fun literal_37 () String)
(declare-fun x_41 () String)
(declare-fun sigmaStar_42 () String)
(declare-fun literal_40 () String)
(declare-fun x_43 () String)
(declare-fun literal_44 () String)
(declare-fun x_53 () String)
(declare-fun x_54 () String)
(declare-fun x_62 () String)
(declare-fun literal_51 () String)
(declare-fun literal_52 () String)
(declare-fun literal_50 () String)
(declare-fun literal_48 () String)
(declare-fun literal_49 () String)
(declare-fun literal_45 () String)
(declare-fun literal_46 () String)
(declare-fun literal_47 () String)
(declare-fun x_65 () String)
(declare-fun sigmaStar_66 () String)
(declare-fun literal_64 () String)
(declare-fun x_67 () String)
(declare-fun literal_68 () String)
(declare-fun x_69 () String)
(declare-fun x_70 () String)
(declare-fun x_71 () String)
(assert (= literal_4 "\x3c\x74\x61\x62\x6c\x65\x20\x77\x69\x64\x74\x68\x3d\x27\x31\x30\x30\x25\x27\x20\x62\x6f\x72\x64\x65\x72\x3d\x30\x20\x63\x65\x6c\x6c\x70\x61\x64\x64\x69\x6e\x67\x3d\x31\x30\x20\x63\x65\x6c\x6c\x73\x70\x61\x63\x69\x6e\x67\x3d\x30\x3e\x0d\x0a\x3c\x74\x72\x3e\x0d\x0a\x3c\x74\x64\x3e\x0d\x0a\x0d\x0a\x20\x3c\x68\x31\x3e\x4d\x61\x6e\x61\x67\x65\x20\x53\x63\x68\x6f\x6f\x6c\x20\x49\x6e\x66\x6f\x72\x6d\x61\x74\x69\x6f\x6e\x3c\x2f\x68\x31\x3e\x0d\x0a\x20\x3c\x62\x72\x3e\x0d\x0a\x0d\x0a\x20\x3c\x66\x6f\x72\x6d\x20\x6e\x61\x6d\x65\x3d\x27\x69\x6e\x66\x6f\x27\x20\x6d\x65\x74\x68\x6f\x64\x3d\x27\x50\x4f\x53\x54\x27\x20\x61\x63\x74\x69\x6f\x6e\x3d\x27\x2e\x2f\x69\x6e\x64\x65\x78\x2e\x70\x68\x70\x27\x3e\x0d\x0a\x0d\x0a\x20\x3c\x74\x61\x62\x6c\x65\x20\x62\x6f\x72\x64\x65\x72\x3d\x30\x20\x77\x69\x64\x74\x68\x3d\x35\x30\x30\x20\x63\x65\x6c\x6c\x73\x70\x61\x63\x69\x6e\x67\x3d\x30\x20\x63\x65\x6c\x6c\x70\x61\x64\x64\x69\x6e\x67\x3d\x27\x33\x27\x20\x61\x6c\x69\x67\x6e\x3d\x27\x63\x65\x6e\x74\x65\x72\x27\x20\x63\x65\x6c\x6c\x70\x61\x64\x64\x69\x6e\x67\x3d\x30\x20\x63\x6c\x61\x73\x73\x3d\x27\x64\x79\x6e\x61\x6d\x69\x63\x6c\x69\x73\x74\x27\x3e\x0d\x0a\x20\x3c\x74\x72\x20\x63\x6c\x61\x73\x73\x3d\x27\x65\x76\x65\x6e\x27\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x72\x69\x67\x68\x74\x27\x3e\x0d\x0a\x20\x20\x20\x53\x63\x68\x6f\x6f\x6c\x20\x4e\x61\x6d\x65\x3a\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x6c\x65\x66\x74\x27\x3e\x0d\x0a\x20\x20\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x74\x65\x78\x74\x27\x20\x76\x61\x6c\x75\x65\x3d\x27"))
(assert (= epsilon ""))
(assert (= x_5 epsilon))
(assert (= x_7 (str.++ literal_4 x_5)))
(assert (= literal_8 "\x20\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d\x35\x30\x27\x20\x6e\x61\x6d\x65\x3d\x27\x73\x63\x68\x6f\x6f\x6c\x6e\x61\x6d\x65\x27\x20\x73\x69\x7a\x65\x3d\x34\x30\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x74\x72\x20\x63\x6c\x61\x73\x73\x3d\x27\x65\x76\x65\x6e\x27\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x72\x69\x67\x68\x74\x27\x3e\x0d\x0a\x20\x20\x20\x41\x64\x64\x72\x65\x73\x73\x3a\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x6c\x65\x66\x74\x27\x3e\x0d\x0a\x20\x20\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x74\x65\x78\x74\x27\x20\x76\x61\x6c\x75\x65\x3d\x27"))
(assert (= x_9 (str.++ x_7 literal_8)))
(assert (= literal_11 "\x20\x6e\x61\x6d\x65\x3d\x73\x63\x68\x6f\x6f\x6c\x61\x64\x64\x72\x65\x73\x73\x27\x20\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d\x27\x35\x30\x27\x20\x73\x69\x7a\x65\x3d\x34\x30\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x74\x72\x20\x63\x6c\x61\x73\x73\x3d\x27\x65\x76\x65\x6e\x27\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x72\x69\x67\x68\x74\x27\x3e\x0d\x0a\x20\x20\x20\x50\x68\x6f\x6e\x65\x20\x23\x3a\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x6c\x65\x66\x74\x27\x3e\x0d\x0a\x20\x20\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x74\x65\x78\x74\x27\x20\x76\x61\x6c\x75\x65\x3d\x27"))
(assert (= x_12 (str.++ x_9 literal_11)))
(assert (= literal_14 "\x20\x6e\x61\x6d\x65\x3d\x73\x63\x68\x6f\x6f\x6c\x70\x68\x6f\x6e\x65\x27\x20\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d\x27\x31\x34\x27\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x74\x72\x20\x63\x6c\x61\x73\x73\x3d\x27\x65\x76\x65\x6e\x27\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x72\x69\x67\x68\x74\x27\x3e\x0d\x0a\x20\x20\x20\x53\x65\x6d\x65\x73\x74\x65\x72\x73\x20\x50\x65\x72\x20\x59\x65\x61\x72\x3a\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x6c\x65\x66\x74\x27\x3e\x0d\x0a\x20\x20\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x74\x65\x78\x74\x27\x20\x76\x61\x6c\x75\x65\x3d\x27"))
(assert (= x_15 (str.++ x_12 literal_14)))
(assert (= literal_17 "\x20\x6e\x61\x6d\x65\x3d\x6e\x75\x6d\x73\x65\x6d\x65\x73\x74\x65\x72\x73\x27\x20\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d\x27\x33\x27\x20\x73\x69\x7a\x65\x3d\x33\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x74\x72\x20\x63\x6c\x61\x73\x73\x3d\x27\x65\x76\x65\x6e\x27\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x72\x69\x67\x68\x74\x27\x3e\x0d\x0a\x20\x20\x20\x50\x65\x72\x69\x6f\x64\x73\x20\x50\x65\x72\x20\x44\x61\x79\x3a\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x6c\x65\x66\x74\x27\x3e\x0d\x0a\x20\x20\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x74\x65\x78\x74\x27\x20\x76\x61\x6c\x75\x65\x3d\x27"))
(assert (= x_18 (str.++ x_15 literal_17)))
(assert (= literal_20 "\x20\x6e\x61\x6d\x65\x3d\x6e\x75\x6d\x70\x65\x72\x69\x6f\x64\x73\x27\x20\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d\x27\x33\x27\x20\x73\x69\x7a\x65\x3d\x33\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x74\x72\x20\x63\x6c\x61\x73\x73\x3d\x27\x65\x76\x65\x6e\x27\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x72\x69\x67\x68\x74\x27\x3e\x0d\x0a\x20\x20\x20\x50\x6f\x69\x6e\x74\x73\x20\x66\x6f\x72\x20\x41\x3a\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x6c\x65\x66\x74\x27\x3e\x0d\x0a\x20\x20\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x74\x65\x78\x74\x27\x20\x76\x61\x6c\x75\x65\x3d\x27"))
(assert (= x_22 (str.++ x_18 literal_20)))
(assert (= x_24 (str.++ x_22 sigmaStar_21)))
(assert (= literal_26 "\x27\x20\x6e\x61\x6d\x65\x3d\x27\x61\x70\x6f\x69\x6e\x74\x27\x20\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d\x27\x33\x27\x20\x73\x69\x7a\x65\x3d\x33\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x74\x72\x20\x63\x6c\x61\x73\x73\x3d\x27\x65\x76\x65\x6e\x27\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x72\x69\x67\x68\x74\x27\x3e\x0d\x0a\x20\x20\x20\x50\x6f\x69\x6e\x74\x73\x20\x66\x6f\x72\x20\x42\x3a\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x6c\x65\x66\x74\x27\x3e\x0d\x0a\x20\x20\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x74\x65\x78\x74\x27\x20\x76\x61\x6c\x75\x65\x3d\x27"))
(assert (= x_28 (str.++ x_24 literal_26)))
(assert (= x_31 (str.++ x_28 sigmaStar_27)))
(assert (= literal_33 "\x27\x20\x6e\x61\x6d\x65\x3d\x27\x62\x70\x6f\x69\x6e\x74\x27\x20\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d\x27\x33\x27\x20\x73\x69\x7a\x65\x3d\x33\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x74\x72\x20\x63\x6c\x61\x73\x73\x3d\x27\x65\x76\x65\x6e\x27\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x72\x69\x67\x68\x74\x27\x3e\x0d\x0a\x20\x20\x20\x50\x6f\x69\x6e\x74\x73\x20\x66\x6f\x72\x20\x43\x3a\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x6c\x65\x66\x74\x27\x3e\x0d\x0a\x20\x20\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x74\x65\x78\x74\x27\x20\x76\x61\x6c\x75\x65\x3d\x27"))
(assert (= x_35 (str.++ x_31 literal_33)))
(assert (= x_38 (str.++ x_35 sigmaStar_34)))
(assert (= literal_37 "\x20\x6e\x61\x6d\x65\x3d\x66\x70\x6f\x69\x6e\x74\x27\x20\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d\x27\x33\x27\x20\x73\x69\x7a\x65\x3d\x33\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x74\x72\x20\x63\x6c\x61\x73\x73\x3d\x27\x65\x76\x65\x6e\x27\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x72\x69\x67\x68\x74\x27\x20\x76\x61\x6c\x69\x67\x6e\x3d\x27\x74\x6f\x70\x27\x3e\x0d\x0a\x20\x20\x20\x54\x65\x78\x74\x20\x46\x6f\x72\x20\x4c\x6f\x67\x69\x6e\x20\x50\x61\x67\x65\x3a\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x6c\x65\x66\x74\x27\x3e\x0d\x0a\x20\x20\x20\x3c\x74\x65\x78\x74\x61\x72\x65\x61\x20\x6e\x61\x6d\x65\x3d\x27\x73\x69\x74\x65\x74\x65\x78\x74\x27\x20\x63\x6f\x6c\x73\x3d\x34\x30\x20\x72\x6f\x77\x73\x3d\x31\x30\x3e\x3c\x2f\x74\x65\x78\x74\x61\x72\x65\x61\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x74\x72\x20\x63\x6c\x61\x73\x73\x3d\x27\x65\x76\x65\x6e\x27\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x72\x69\x67\x68\x74\x27\x20\x76\x61\x6c\x69\x67\x6e\x3d\x27\x74\x6f\x70\x27\x3e\x54\x6f\x64\x61\x79\x27\x73\x20\x4d\x65\x73\x73\x61\x67\x65\x3a\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x6c\x65\x66\x74\x27\x3e\x0d\x0a\x20\x20\x20\x3c\x74\x65\x78\x74\x61\x72\x65\x61\x20\x6e\x61\x6d\x65\x3d\x27\x73\x69\x74\x65\x6d\x65\x73\x73\x61\x67\x65\x27\x20\x63\x6f\x6c\x73\x3d\x34\x30\x20\x72\x6f\x77\x73\x3d\x31\x30\x3e\x3c\x2f\x74\x65\x78\x74\x61\x72\x65\x61\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x2f\x74\x61\x62\x6c\x65\x3e\x0d\x0a\x3c\x62\x72\x3e\x0d\x0a\x20\x3c\x74\x61\x62\x6c\x65\x20\x77\x69\x64\x74\x68\x3d\x27\x35\x30\x30\x27\x20\x61\x6c\x69\x67\x6e\x3d\x27\x63\x65\x6e\x74\x65\x72\x27\x20\x63\x65\x6c\x6c\x70\x61\x64\x64\x69\x6e\x67\x3d\x27\x30\x27\x20\x63\x65\x6c\x6c\x73\x70\x61\x63\x69\x6e\x67\x3d\x27\x30\x27\x20\x62\x6f\x72\x64\x65\x72\x3d\x27\x30\x27\x3e\x0d\x0a\x20\x20\x3c\x74\x72\x3e\x0d\x0a\x20\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x63\x65\x6e\x74\x65\x72\x27\x3e\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x62\x75\x74\x74\x6f\x6e\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x20\x55\x70\x64\x61\x74\x65\x20\x27\x20\x6f\x6e\x43\x6c\x69\x63\x6b\x3d\x27\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x69\x6e\x66\x6f\x2e\x69\x6e\x66\x6f\x75\x70\x64\x61\x74\x65\x2e\x76\x61\x6c\x75\x65\x3d\x31\x3b\x64\x6f\x63\x75\x6d\x65\x6e\x74\x2e\x69\x6e\x66\x6f\x2e\x73\x75\x62\x6d\x69\x74\x28\x29\x3b\x27\x3e\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x2f\x74\x61\x62\x6c\x65\x3e\x0d\x0a\x0d\x0a\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x68\x69\x64\x64\x65\x6e\x27\x20\x6e\x61\x6d\x65\x3d\x27\x69\x6e\x66\x6f\x75\x70\x64\x61\x74\x65\x27\x20\x76\x61\x6c\x75\x65\x3d\x27\x27\x3e\x0d\x0a\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x68\x69\x64\x64\x65\x6e\x27\x20\x6e\x61\x6d\x65\x3d\x27\x70\x61\x67\x65\x32\x27\x20\x76\x61\x6c\x75\x65\x3d\x27"))
(assert (= x_41 (str.++ literal_37 sigmaStar_2)))
(assert (= literal_40 "\x27\x20\x6e\x61\x6d\x65\x3d\x27\x63\x70\x6f\x69\x6e\x74\x27\x20\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d\x27\x33\x27\x20\x73\x69\x7a\x65\x3d\x33\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x74\x72\x20\x63\x6c\x61\x73\x73\x3d\x27\x65\x76\x65\x6e\x27\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x72\x69\x67\x68\x74\x27\x3e\x0d\x0a\x20\x20\x20\x50\x6f\x69\x6e\x74\x73\x20\x66\x6f\x72\x20\x44\x3a\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x6c\x65\x66\x74\x27\x3e\x0d\x0a\x20\x20\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x74\x65\x78\x74\x27\x20\x76\x61\x6c\x75\x65\x3d\x27"))
(assert (= x_43 (str.++ x_38 literal_40)))
(assert (= literal_44 "\x3e\x0d\x0a\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x68\x69\x64\x64\x65\x6e\x27\x20\x6e\x61\x6d\x65\x3d\x27\x6c\x6f\x67\x6f\x75\x74\x27\x3e\x0d\x0a\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x68\x69\x64\x64\x65\x6e\x27\x20\x6e\x61\x6d\x65\x3d\x27\x70\x61\x67\x65\x27\x20\x76\x61\x6c\x75\x65\x3d\x27"))
(assert (= x_53 (str.++ x_41 literal_44)))
(assert (= x_54 (str.++ x_43 sigmaStar_42)))
(assert (= literal_51 "\x32"))
(assert (= literal_52 "\x30"))
(assert (= literal_50 "\x30"))
(assert (= literal_48 "\x35"))
(assert (= literal_49 "\x31"))
(assert (= literal_45 "\x32"))
(assert (= literal_46 "\x34"))
(assert (= literal_47 "\x30"))
(assert (or (= x_62 literal_51) (= x_62 literal_52) (= x_62 literal_50) (= x_62 literal_48) (= x_62 literal_49) (= x_62 sigmaStar_1) (= x_62 literal_45) (= x_62 literal_46) (= x_62 literal_47)))
(assert (= x_65 (str.++ x_53 x_62)))
(assert (= literal_64 "\x27\x20\x6e\x61\x6d\x65\x3d\x27\x64\x70\x6f\x69\x6e\x74\x27\x20\x6d\x61\x78\x6c\x65\x6e\x67\x74\x68\x3d\x27\x33\x27\x20\x73\x69\x7a\x65\x3d\x33\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x74\x72\x20\x63\x6c\x61\x73\x73\x3d\x27\x65\x76\x65\x6e\x27\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x72\x69\x67\x68\x74\x27\x3e\x0d\x0a\x20\x20\x20\x50\x6f\x69\x6e\x74\x73\x20\x66\x6f\x72\x20\x46\x3a\x0d\x0a\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x74\x64\x20\x61\x6c\x69\x67\x6e\x3d\x27\x6c\x65\x66\x74\x27\x3e\x0d\x0a\x20\x20\x20\x3c\x69\x6e\x70\x75\x74\x20\x74\x79\x70\x65\x3d\x27\x74\x65\x78\x74\x27\x20\x76\x61\x6c\x75\x65\x3d\x27"))
(assert (= x_67 (str.++ x_54 literal_64)))
(assert (= literal_68 "\x3e\x0d\x0a\x20\x3c\x2f\x66\x6f\x72\x6d\x3e\x0d\x0a\x0d\x0a\x20\x3c\x74\x61\x62\x6c\x65\x20\x77\x69\x64\x74\x68\x3d\x35\x32\x30\x27\x20\x62\x6f\x72\x64\x65\x72\x3d\x30\x20\x63\x65\x6c\x6c\x73\x70\x61\x63\x69\x6e\x67\x3d\x30\x20\x63\x65\x6c\x6c\x70\x61\x64\x64\x69\x6e\x67\x3d\x30\x20\x68\x65\x69\x67\x68\x74\x3d\x31\x3e\x0d\x0a\x20\x20\x3c\x74\x72\x3e\x0d\x0a\x20\x20\x20\x3c\x74\x64\x20\x76\x61\x6c\x69\x67\x6e\x3d\x27\x74\x6f\x70\x27\x3e\x0d\x0a\x20\x20\x20\x3c\x65\x6d\x70\x74\x79\x3e\x0d\x0a\x20\x20\x20\x3c\x2f\x74\x64\x3e\x0d\x0a\x20\x20\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x2f\x74\x61\x62\x6c\x65\x3e\x0d\x0a\x0d\x0a\x3c\x2f\x74\x64\x3e\x0d\x0a\x3c\x2f\x74\x72\x3e\x0d\x0a\x20\x3c\x2f\x74\x61\x62\x6c\x65\x3e\x0d\x0a\x20"))
(assert (= x_69 (str.++ x_65 literal_68)))
(assert (= x_70 (str.++ x_67 sigmaStar_66)))
(assert (= x_71 (str.++ x_70 x_69)))
(assert (str.in_re x_71 (re.++ (re.* re.allchar) (re.++ (str.to_re "\x5c\x3c\x53\x43\x52\x49\x50\x54") (re.* re.allchar)))))
(check-sat)
(exit)
