(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: Stranger
Application: Security analysis of string manipulating web applications
Target solver: CVC4, Norn, Z3-str2
Publication:
Hung-En Wang, Tzung-Lin Tsai, Chun-Han Lin, Fang Yu, Jie-Hong R. Jiang:
String Analysis via Automata Manipulation with Logic Circuit Representation. CAV (1) 2016: 241-260.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun sigmaStar_0 () String)
(declare-fun sigmaStar_1 () String)
(declare-fun sigmaStar_2 () String)
(declare-fun sigmaStar_3 () String)
(declare-fun sigmaStar_4 () String)
(declare-fun sigmaStar_5 () String)
(declare-fun sigmaStar_6 () String)
(declare-fun sigmaStar_7 () String)
(declare-fun sigmaStar_8 () String)
(declare-fun sigmaStar_9 () String)
(declare-fun sigmaStar_10 () String)
(declare-fun sigmaStar_11 () String)
(declare-fun sigmaStar_12 () String)
(declare-fun sigmaStar_13 () String)
(declare-fun sigmaStar_14 () String)
(declare-fun sigmaStar_15 () String)
(declare-fun literal_16 () String)
(declare-fun x_20 () String)
(declare-fun literal_17 () String)
(declare-fun literal_18 () String)
(declare-fun x_22 () String)
(declare-fun literal_19 () String)
(declare-fun x_21 () String)
(declare-fun x_23 () String)
(declare-fun literal_24 () String)
(declare-fun x_26 () String)
(declare-fun literal_25 () String)
(declare-fun x_29 () String)
(declare-fun x_30 () String)
(declare-fun literal_27 () String)
(declare-fun literal_28 () String)
(declare-fun x_32 () String)
(declare-fun x_31 () String)
(declare-fun x_33 () String)
(declare-fun literal_34 () String)
(declare-fun x_36 () String)
(declare-fun literal_35 () String)
(declare-fun x_37 () String)
(declare-fun literal_38 () String)
(declare-fun x_40 () String)
(declare-fun literal_39 () String)
(declare-fun x_41 () String)
(declare-fun literal_44 () String)
(declare-fun x_46 () String)
(declare-fun literal_45 () String)
(declare-fun x_50 () String)
(declare-fun literal_58 () String)
(declare-fun x_66 () String)
(declare-fun literal_65 () String)
(declare-fun x_70 () String)
(declare-fun x_71 () String)
(declare-fun literal_64 () String)
(declare-fun literal_69 () String)
(declare-fun x_74 () String)
(declare-fun x_73 () String)
(declare-fun x_78 () String)
(declare-fun literal_79 () String)
(declare-fun x_82 () String)
(declare-fun literal_81 () String)
(declare-fun x_86 () String)
(declare-fun literal_95 () String)
(declare-fun x_101 () String)
(declare-fun x_99 () String)
(declare-fun literal_87 () String)
(declare-fun literal_94 () String)
(declare-fun literal_98 () String)
(declare-fun x_103 () String)
(declare-fun literal_100 () String)
(declare-fun x_104 () String)
(declare-fun literal_97 () String)
(declare-fun x_96 () String)
(declare-fun epsilon () String)
(declare-fun literal_54 () String)
(declare-fun literal_56 () String)
(declare-fun x_106 () String)
(declare-fun x_105 () String)
(declare-fun literal_102 () String)
(declare-fun x_108 () String)
(declare-fun x_107 () String)
(declare-fun x_110 () String)
(declare-fun literal_109 () String)
(declare-fun x_113 () String)
(declare-fun literal_111 () String)
(declare-fun x_115 () String)
(declare-fun literal_114 () String)
(declare-fun x_118 () String)
(declare-fun x_119 () String)
(declare-fun literal_117 () String)
(declare-fun x_122 () String)
(declare-fun x_121 () String)
(declare-fun x_124 () String)
(declare-fun literal_125 () String)
(declare-fun x_128 () String)
(declare-fun literal_127 () String)
(declare-fun x_130 () String)
(declare-fun x_131 () String)
(declare-fun literal_129 () String)
(declare-fun literal_126 () String)
(declare-fun x_133 () String)
(declare-fun x_132 () String)
(declare-fun x_134 () String)
(declare-fun literal_135 () String)
(declare-fun x_144 () String)
(declare-fun literal_143 () String)
(declare-fun x_151 () String)
(declare-fun x_152 () String)
(declare-fun literal_141 () String)
(declare-fun literal_142 () String)
(declare-fun literal_150 () String)
(declare-fun literal_140 () String)
(declare-fun literal_138 () String)
(declare-fun literal_139 () String)
(declare-fun literal_137 () String)
(declare-fun x_155 () String)
(declare-fun x_154 () String)
(declare-fun x_157 () String)
(declare-fun literal_158 () String)
(declare-fun x_161 () String)
(declare-fun literal_160 () String)
(declare-fun x_163 () String)
(declare-fun x_164 () String)
(declare-fun literal_162 () String)
(declare-fun literal_159 () String)
(declare-fun x_166 () String)
(declare-fun x_165 () String)
(declare-fun x_167 () String)
(declare-fun sigmaStar_172 () String)
(declare-fun literal_176 () String)
(declare-fun x_169 () String)
(declare-fun x_177 () String)
(declare-fun literal_178 () String)
(declare-fun x_179 () String)
(assert (= literal_16 "\x53\x45\x4c\x45\x43\x54\x20"))
(assert (= literal_17 "\x70\x2e\x69\x64\x2c\x70\x2e\x73\x75\x62\x6a\x65\x63\x74\x2c\x70\x2e\x6d\x6f\x64\x69\x66\x69\x65\x64\x2c\x70\x2e\x64\x69\x73\x63\x75\x73\x73\x69\x6f\x6e\x2c\x70\x2e\x75\x73\x65\x72\x69\x64"))
(assert (= literal_18 "\x70\x2e\x2a"))
(assert (or (= x_20 literal_17) (= x_20 literal_18)))
(assert (= x_22 (str.++ literal_16 x_20)))
(assert (= literal_19 "\x53\x45\x4c\x45\x43\x54\x20"))
(assert (or (= x_21 literal_17) (= x_21 literal_18)))
(assert (= x_23 (str.++ literal_19 x_21)))
(assert (= literal_24 "\x2c\x20\x64\x2e\x6e\x61\x6d\x65\x2c\x20\x64\x2e\x74\x69\x6d\x65\x6d\x6f\x64\x69\x66\x69\x65\x64\x2c\x20\x64\x2e\x75\x73\x65\x72\x6d\x6f\x64\x69\x66\x69\x65\x64\x2c\x20\x64\x2e\x67\x72\x6f\x75\x70\x69\x64\x2c\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x75\x2e\x66\x69\x72\x73\x74\x6e\x61\x6d\x65\x2c\x20\x75\x2e\x6c\x61\x73\x74\x6e\x61\x6d\x65\x2c\x20\x75\x2e\x65\x6d\x61\x69\x6c\x2c\x20\x75\x2e\x70\x69\x63\x74\x75\x72\x65\x20"))
(assert (= x_26 (str.++ x_22 literal_24)))
(assert (= literal_25 "\x2c\x20\x64\x2e\x6e\x61\x6d\x65\x2c\x20\x64\x2e\x74\x69\x6d\x65\x6d\x6f\x64\x69\x66\x69\x65\x64\x2c\x20\x64\x2e\x75\x73\x65\x72\x6d\x6f\x64\x69\x66\x69\x65\x64\x2c\x20\x64\x2e\x67\x72\x6f\x75\x70\x69\x64\x2c\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x75\x2e\x66\x69\x72\x73\x74\x6e\x61\x6d\x65\x2c\x20\x75\x2e\x6c\x61\x73\x74\x6e\x61\x6d\x65\x2c\x20\x75\x2e\x65\x6d\x61\x69\x6c\x2c\x20\x75\x2e\x70\x69\x63\x74\x75\x72\x65\x20"))
(assert (= x_29 (str.++ x_23 literal_25)))
(assert (= literal_27 ""))
(assert (= literal_28 "\x2c\x20\x75\x6d\x2e\x66\x69\x72\x73\x74\x6e\x61\x6d\x65\x20\x41\x53\x20\x75\x6d\x66\x69\x72\x73\x74\x6e\x61\x6d\x65\x2c\x20\x75\x6d\x2e\x6c\x61\x73\x74\x6e\x61\x6d\x65\x20\x41\x53\x20\x75\x6d\x6c\x61\x73\x74\x6e\x61\x6d\x65"))
(assert (or (= x_30 literal_27) (= x_30 literal_28)))
(assert (= x_32 (str.++ x_26 x_30)))
(assert (or (= x_31 literal_27) (= x_31 literal_28)))
(assert (= x_33 (str.++ x_29 x_31)))
(assert (= literal_34 "\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x46\x52\x4f\x4d\x20"))
(assert (= x_36 (str.++ x_32 literal_34)))
(assert (= literal_35 "\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x46\x52\x4f\x4d\x20\x28"))
(assert (= x_37 (str.++ x_33 literal_35)))
(assert (= literal_38 "\x66\x6f\x72\x75\x6d\x5f\x64\x69\x73\x63\x75\x73\x73\x69\x6f\x6e\x73\x20\x64\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x4a\x4f\x49\x4e\x20"))
(assert (= x_40 (str.++ x_36 literal_38)))
(assert (= literal_39 "\x66\x6f\x72\x75\x6d\x5f\x70\x6f\x73\x74\x73\x20\x70\x2c\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"))
(assert (= x_41 (str.++ x_37 literal_39)))
(assert (= literal_44 "\x66\x6f\x72\x75\x6d\x5f\x70\x6f\x73\x74\x73\x20\x70\x20\x4f\x4e\x20\x70\x2e\x64\x69\x73\x63\x75\x73\x73\x69\x6f\x6e\x20\x3d\x20\x64\x2e\x69\x64\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x4a\x4f\x49\x4e\x20"))
(assert (= x_46 (str.++ x_40 literal_44)))
(assert (= literal_45 "\x75\x73\x65\x72\x20\x75\x2c\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"))
(assert (= x_50 (str.++ x_41 literal_45)))
(assert (= literal_58 "\x75\x73\x65\x72\x20\x75\x20\x4f\x4e\x20\x70\x2e\x75\x73\x65\x72\x69\x64\x20\x3d\x20\x75\x2e\x69\x64\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"))
(assert (= x_66 (str.++ x_46 literal_58)))
(assert (= literal_65 "\x66\x6f\x72\x75\x6d\x5f\x64\x69\x73\x63\x75\x73\x73\x69\x6f\x6e\x73\x20\x64\x29\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"))
(assert (= x_70 (str.++ x_50 literal_65)))
(assert (= literal_64 "\x20\x4c\x45\x46\x54\x20\x4a\x4f\x49\x4e\x20\x75\x73\x65\x72\x20\x75\x6d\x20\x6f\x6e\x20\x28\x64\x2e\x75\x73\x65\x72\x6d\x6f\x64\x69\x66\x69\x65\x64\x20\x3d\x20\x75\x6d\x2e\x69\x64\x29"))
(assert (= literal_69 ""))
(assert (or (= x_71 literal_64) (= x_71 literal_69)))
(assert (= x_74 (str.++ x_66 x_71)))
(assert (or (= x_73 literal_64) (= x_73 literal_69)))
(assert (= x_78 (str.++ x_70 x_73)))
(assert (= literal_79 "\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x57\x48\x45\x52\x45\x20\x64\x2e\x66\x6f\x72\x75\x6d\x20\x3d\x20\x27"))
(assert (= x_82 (str.++ x_74 literal_79)))
(assert (= literal_81 "\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x57\x48\x45\x52\x45\x20\x64\x2e\x66\x6f\x72\x75\x6d\x20\x3d\x20\x27"))
(assert (= x_86 (str.++ x_78 literal_81)))
(assert (= literal_95 "\x27\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x41\x4e\x44\x20\x70\x2e\x70\x61\x72\x65\x6e\x74\x20\x3d\x20\x30\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"))
(assert (= x_101 (str.++ x_82 literal_95)))
(assert (= literal_87 "\x20\x41\x4e\x44\x20\x28\x28\x64\x2e\x74\x69\x6d\x65\x73\x74\x61\x72\x74\x20\x3d\x20\x30\x20\x4f\x52\x20\x64\x2e\x74\x69\x6d\x65\x73\x74\x61\x72\x74\x20\x3c\x3d\x20\x27\x29\x20\x41\x4e\x44\x20\x28\x64\x2e\x74\x69\x6d\x65\x65\x6e\x64\x20\x3d\x20\x30\x20\x4f\x52\x20\x64\x2e\x74\x69\x6d\x65\x65\x6e\x64\x20\x3e\x20\x27\x29"))
(assert (= literal_94 "\x20\x41\x4e\x44\x20\x28\x28\x64\x2e\x74\x69\x6d\x65\x73\x74\x61\x72\x74\x20\x3d\x20\x30\x20\x4f\x52\x20\x64\x2e\x74\x69\x6d\x65\x73\x74\x61\x72\x74\x20\x3c\x3d\x20\x27\x29\x20\x41\x4e\x44\x20\x28\x64\x2e\x74\x69\x6d\x65\x65\x6e\x64\x20\x3d\x20\x30\x20\x4f\x52\x20\x64\x2e\x74\x69\x6d\x65\x65\x6e\x64\x20\x3e\x20\x27\x29\x20\x4f\x52\x20\x64\x2e\x75\x73\x65\x72\x69\x64\x20\x3d\x20\x27\x27"))
(assert (or (= x_99 literal_87) (= x_99 literal_94)))
(assert (= literal_98 "\x29"))
(assert (= x_103 (str.++ x_99 literal_98)))
(assert (= literal_100 "\x27\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x41\x4e\x44\x20\x70\x2e\x64\x69\x73\x63\x75\x73\x73\x69\x6f\x6e\x20\x3d\x20\x64\x2e\x69\x64\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x41\x4e\x44\x20\x70\x2e\x70\x61\x72\x65\x6e\x74\x20\x3d\x20\x30\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x41\x4e\x44\x20\x70\x2e\x75\x73\x65\x72\x69\x64\x20\x3d\x20\x75\x2e\x69\x64\x20"))
(assert (= x_104 (str.++ x_86 literal_100)))
(assert (= literal_97 "\x20\x41\x4e\x44\x20\x28\x64\x2e\x67\x72\x6f\x75\x70\x69\x64\x20\x3d\x20\x27"))
(assert (= epsilon ""))
(assert (= literal_54 "\x63\x6f\x75\x72\x73\x65"))
(assert (= literal_56 "\x63\x6f\x75\x72\x73\x65"))
(assert (or (= x_96 epsilon) (= x_96 literal_54) (= x_96 sigmaStar_3) (= x_96 literal_56)))
(assert (= x_106 (str.++ literal_97 x_96)))
(assert (= literal_102 ""))
(assert (or (= x_105 x_103) (= x_105 literal_102)))
(assert (= x_108 (str.++ x_101 x_105)))
(assert (or (= x_107 x_103) (= x_107 literal_102)))
(assert (= x_110 (str.++ x_104 x_107)))
(assert (= literal_109 "\x27\x20\x4f\x52\x20\x64\x2e\x67\x72\x6f\x75\x70\x69\x64\x20\x3d\x20\x27\x2d\x31\x27\x29\x20"))
(assert (= x_113 (str.++ x_106 literal_109)))
(assert (= literal_111 "\x20"))
(assert (= x_115 (str.++ x_108 literal_111)))
(assert (= literal_114 "\x20"))
(assert (= x_118 (str.++ x_110 literal_114)))
(assert (= literal_117 ""))
(assert (or (= x_119 literal_117) (= x_119 x_113)))
(assert (= x_122 (str.++ x_115 x_119)))
(assert (or (= x_121 literal_117) (= x_121 x_113)))
(assert (= x_124 (str.++ x_118 x_121)))
(assert (= literal_125 "\x20"))
(assert (= x_128 (str.++ x_122 literal_125)))
(assert (= literal_127 "\x20"))
(assert (= x_130 (str.++ x_124 literal_127)))
(assert (= literal_129 ""))
(assert (= literal_126 "\x20\x41\x4e\x44\x20\x75\x2e\x69\x64\x20\x3d\x20\x27\x30\x27\x20"))
(assert (or (= x_131 literal_129) (= x_131 literal_126)))
(assert (= x_133 (str.++ x_128 x_131)))
(assert (or (= x_132 literal_129) (= x_132 literal_126)))
(assert (= x_134 (str.++ x_130 x_132)))
(assert (= literal_135 "\x20\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x4f\x52\x44\x45\x52\x20\x42\x59\x20"))
(assert (= x_144 (str.++ x_133 literal_135)))
(assert (= literal_143 "\x0d\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x4f\x52\x44\x45\x52\x20\x42\x59\x20"))
(assert (= x_151 (str.++ x_134 literal_143)))
(assert (= literal_141 ""))
(assert (= literal_142 ""))
(assert (= literal_150 "\x64\x2e\x74\x69\x6d\x65\x6d\x6f\x64\x69\x66\x69\x65\x64\x20\x44\x45\x53\x43"))
(assert (= literal_140 ""))
(assert (= literal_138 ""))
(assert (= literal_139 ""))
(assert (= literal_137 ""))
(assert (or (= x_152 literal_141) (= x_152 literal_142) (= x_152 literal_150) (= x_152 literal_140) (= x_152 literal_138) (= x_152 literal_139) (= x_152 literal_137)))
(assert (= x_155 (str.++ x_144 x_152)))
(assert (or (= x_154 literal_141) (= x_154 literal_142) (= x_154 literal_150) (= x_154 literal_140) (= x_154 literal_138) (= x_154 literal_139) (= x_154 literal_137)))
(assert (= x_157 (str.++ x_151 x_154)))
(assert (= literal_158 "\x20"))
(assert (= x_161 (str.++ x_155 literal_158)))
(assert (= literal_160 "\x20"))
(assert (= x_163 (str.++ x_157 literal_160)))
(assert (= literal_162 ""))
(assert (= literal_159 "\x20\x4c\x49\x4d\x49\x54\x20\x30\x20"))
(assert (or (= x_164 literal_162) (= x_164 literal_159)))
(assert (= x_166 (str.++ x_161 x_164)))
(assert (or (= x_165 literal_162) (= x_165 literal_159)))
(assert (= x_167 (str.++ x_163 x_165)))
(assert (= literal_176 "\x3c\x61\x20\x68\x72\x65\x66\x3d\x22\x2f\x75\x73\x65\x72\x2f\x76\x69\x65\x77\x2e\x70\x68\x70\x3f\x69\x64\x3d\x26\x61\x6d\x70\x3b\x63\x6f\x75\x72\x73\x65\x3d\x22\x3e"))
(assert (or (= x_169 x_166) (= x_169 x_167)))
(assert (= x_177 (str.++ literal_176 x_169)))
(assert (= literal_178 "\x3c\x2f\x61\x3e"))
(assert (= x_179 (str.++ x_177 literal_178)))
(assert (str.in_re x_179 (re.++ (re.* re.allchar) (re.++ (str.to_re "\x5c\x3c\x53\x43\x52\x49\x50\x54") (re.* re.allchar)))))
(check-sat)
(exit)
