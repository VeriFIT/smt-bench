(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_25 () Bool)
(declare-fun T_27 () Bool)
(declare-fun T_SELECT_2 () Bool)
(declare-fun T_SELECT_3 () Bool)
(declare-fun PCTEMP_LHS_2 () Int)
(declare-fun PCTEMP_LHS_3 () Int)
(declare-fun T0_41 () String)
(declare-fun T1_41 () String)
(declare-fun var_0xINPUT_14893 () String)
(assert (= var_0xINPUT_14893 (str.++ T0_41 T1_41)))
(assert (not (str.in_re T1_41 (str.to_re ";"))))
(assert T_27)
(assert (= T_27 (< PCTEMP_LHS_3 0)))
(assert (= PCTEMP_LHS_3 (- 1)))
(assert (= T_SELECT_3 (not (= PCTEMP_LHS_3 (- 1)))))
(assert (= T_SELECT_2 (not (= PCTEMP_LHS_2 (- 1)))))
(assert T_25)
(assert (= T_25 (< (- 1) PCTEMP_LHS_2)))
(assert (= PCTEMP_LHS_2 (str.len T0_41))) ; len 0
(assert (not T_SELECT_3))
(check-sat)
(exit)
