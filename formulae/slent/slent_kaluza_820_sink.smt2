(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_25 () Bool)
(declare-fun T_26 () Bool)
(declare-fun T_SELECT_5 () Bool)
(declare-fun I0_59 () Int)
(declare-fun I0_63 () Int)
(declare-fun I1_59 () Int)
(declare-fun I1_63 () Int)
(declare-fun I2_59 () Int)
(declare-fun I2_63 () Int)
(declare-fun PCTEMP_LHS_15 () Int)
(declare-fun T_2a () Int)
(declare-fun NEW_DGNode_1514 () String)
(declare-fun NEW_DGNode_1515 () String)
(declare-fun PCTEMP_LHS_19 () String)
(assert (= PCTEMP_LHS_19 NEW_DGNode_1515))
(assert (= NEW_DGNode_1515 NEW_DGNode_1514))
(assert (not (str.in_re NEW_DGNode_1515 (str.to_re "+"))))
(assert (not (str.in_re NEW_DGNode_1514 (str.to_re "%"))))
(assert (= T_SELECT_5 (not (= PCTEMP_LHS_15 (- 1)))))
(assert T_26)
(assert (= T_26 (not T_25)))
(assert (= T_25 (= PCTEMP_LHS_15 (- 1))))
(assert (= I0_59 (- PCTEMP_LHS_15 0)))
(assert (>= PCTEMP_LHS_15 0))
(assert (= I2_59 I1_59))
(assert (<= PCTEMP_LHS_15 I1_59))
(assert (= T_2a (+ PCTEMP_LHS_15 1)))
(assert (>= T_2a 0))
(assert (>= I2_63 T_2a))
(assert (= I2_63 I1_63))
(assert (<= I2_63 I1_63))
(assert (= I0_63 (- I2_63 T_2a)))
(assert (= I0_63 (str.len PCTEMP_LHS_19))) ; len 0
(check-sat)
(exit)
