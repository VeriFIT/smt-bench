(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_1e6 () Bool)
(declare-fun T_1ee () Bool)
(declare-fun T_SELECT_27 () Bool)
(declare-fun T_SELECT_28 () Bool)
(declare-fun I0_904 () Int)
(declare-fun I1_904 () Int)
(declare-fun I2_904 () Int)
(declare-fun PCTEMP_LHS_39 () Int)
(declare-fun PCTEMP_LHS_40 () Int)
(declare-fun T_1f5 () Int)
(declare-fun T_1fc () Int)
(declare-fun T0_874 () String)
(declare-fun T1_874 () String)
(declare-fun T_1ec () String)
(assert (= T_1ec (str.++ T0_874 T1_874)))
(assert (not (str.in_re T1_874 (str.to_re ";"))))
(assert T_1ee)
(assert (= T_1ee (< PCTEMP_LHS_40 0)))
(assert (= PCTEMP_LHS_40 (- 1)))
(assert (= T_SELECT_28 (not (= PCTEMP_LHS_40 (- 1)))))
(assert (= T_SELECT_27 (not (= PCTEMP_LHS_39 (- 1)))))
(assert T_1e6)
(assert (= T_1e6 (< (- 1) PCTEMP_LHS_39)))
(assert (>= T_1fc T_1f5))
(assert (= I2_904 I1_904))
(assert (<= T_1fc I1_904))
(assert (= I0_904 (- T_1fc T_1f5)))
(assert (>= T_1f5 0))
(assert (= T_1f5 (+ PCTEMP_LHS_39 7)))
(assert (= PCTEMP_LHS_39 (str.len T0_874))) ; len 0
(assert (not T_SELECT_28))
(check-sat)
(exit)
