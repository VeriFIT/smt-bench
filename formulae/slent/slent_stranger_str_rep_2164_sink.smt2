(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Stranger benchmarks (with string-to-string replace-all)
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, S3P, Trau
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun literal_1 () String)
(declare-fun b_literal_1 () Bool)
(declare-fun sigmaStar_749 () String)
(declare-fun b_sigmaStar_749 () Bool)
(declare-fun literal_11 () String)
(declare-fun b_literal_11 () Bool)
(declare-fun literal_15 () String)
(declare-fun b_literal_15 () Bool)
(declare-fun literal_18 () String)
(declare-fun b_literal_18 () Bool)
(declare-fun literal_22 () String)
(declare-fun b_literal_22 () Bool)
(declare-fun literal_30 () String)
(declare-fun b_literal_30 () Bool)
(declare-fun literal_29 () String)
(declare-fun b_literal_29 () Bool)
(declare-fun literal_25 () String)
(declare-fun b_literal_25 () Bool)
(declare-fun sigmaStar_757 () String)
(declare-fun b_sigmaStar_757 () Bool)
(declare-fun literal_27 () String)
(declare-fun b_literal_27 () Bool)
(declare-fun literal_31 () String)
(declare-fun b_literal_31 () Bool)
(declare-fun literal_40 () String)
(declare-fun b_literal_40 () Bool)
(declare-fun literal_35 () String)
(declare-fun b_literal_35 () Bool)
(declare-fun sigmaStar_762 () String)
(declare-fun b_sigmaStar_762 () Bool)
(declare-fun literal_36 () String)
(declare-fun b_literal_36 () Bool)
(declare-fun sigmaStar_764 () String)
(declare-fun b_sigmaStar_764 () Bool)
(declare-fun literal_37 () String)
(declare-fun b_literal_37 () Bool)
(declare-fun literal_42 () String)
(declare-fun b_literal_42 () Bool)
(declare-fun literal_49 () String)
(declare-fun b_literal_49 () Bool)
(declare-fun literal_50 () String)
(declare-fun b_literal_50 () Bool)
(declare-fun literal_46 () String)
(declare-fun b_literal_46 () Bool)
(declare-fun sigmaStar_270 () String)
(declare-fun b_sigmaStar_270 () Bool)
(declare-fun literal_71 () String)
(declare-fun b_literal_71 () Bool)
(declare-fun atkPtn () String)
(declare-fun b_atkPtn () Bool)
(declare-fun x_9 () String)
(declare-fun b_x_9 () Bool)
(declare-fun x_13 () String)
(declare-fun b_x_13 () Bool)
(declare-fun x_19 () String)
(declare-fun b_x_19 () Bool)
(declare-fun x_23 () String)
(declare-fun b_x_23 () Bool)
(declare-fun x_28 () String)
(declare-fun b_x_28 () Bool)
(declare-fun x_33 () String)
(declare-fun b_x_33 () Bool)
(declare-fun x_34 () String)
(declare-fun b_x_34 () Bool)
(declare-fun x_38 () String)
(declare-fun b_x_38 () Bool)
(declare-fun x_39 () String)
(declare-fun b_x_39 () Bool)
(declare-fun x_43 () String)
(declare-fun b_x_43 () Bool)
(declare-fun x_44 () String)
(declare-fun b_x_44 () Bool)
(declare-fun x_45 () String)
(declare-fun b_x_45 () Bool)
(declare-fun x_47 () String)
(declare-fun b_x_47 () Bool)
(declare-fun x_48 () String)
(declare-fun b_x_48 () Bool)
(declare-fun x_51 () String)
(declare-fun b_x_51 () Bool)
(declare-fun x_52 () String)
(declare-fun b_x_52 () Bool)
(declare-fun x_53 () String)
(declare-fun b_x_53 () Bool)
(declare-fun x_54 () String)
(declare-fun b_x_54 () Bool)
(declare-fun x_55 () String)
(declare-fun b_x_55 () Bool)
(declare-fun x_56 () String)
(declare-fun b_x_56 () Bool)
(declare-fun x_57 () String)
(declare-fun b_x_57 () Bool)
(declare-fun x_58 () String)
(declare-fun b_x_58 () Bool)
(declare-fun x_62 () String)
(declare-fun b_x_62 () Bool)
(declare-fun x_66 () String)
(declare-fun b_x_66 () Bool)
(declare-fun x_70 () String)
(declare-fun b_x_70 () Bool)
(declare-fun x_72 () String)
(declare-fun b_x_72 () Bool)
(declare-fun sink () String)
(declare-fun b_sink () Bool)
(declare-fun atk_sigmaStar_1 () String)
(declare-fun atk_sigmaStar_2 () String)
(declare-fun atk_sink () String)

(assert (and b_literal_1 (= literal_1 "\u{44}\u{42}\u{20}\u{63}\u{61}\u{63}\u{68}\u{65}\u{5f}\u{66}\u{69}\u{6c}\u{74}\u{65}\u{72}\u{73}\u{20}\u{65}\u{6e}\u{74}\u{72}\u{79}\u{20}\u{66}\u{6f}\u{72}\u{20}")))
(assert (and b_literal_11 (= literal_11 "\u{5c}\u{6e}")))
(assert (and b_literal_15 (= literal_15 "\u{69}\u{64}\u{20}\u{3d}\u{20}\u{5c}\u{6e}")))
(assert (and b_literal_18 (= literal_18 "\u{66}\u{69}\u{6c}\u{74}\u{65}\u{72}\u{20}\u{3d}\u{20}\u{5c}\u{6e}")))
(assert (and b_literal_22 (= literal_22 "\u{76}\u{65}\u{72}\u{73}\u{69}\u{6f}\u{6e}\u{20}\u{3d}\u{20}\u{5c}\u{6e}")))
(assert (and b_literal_30 (= literal_30 "\u{31}")))
(assert (and b_literal_29 (= literal_29 "\u{30}")))
(assert (and b_literal_25 (= literal_25 "\u{44}\u{65}\u{6c}\u{65}\u{74}\u{69}\u{6e}\u{67}\u{20}\u{44}\u{42}\u{20}\u{63}\u{61}\u{63}\u{68}\u{65}\u{5f}\u{66}\u{69}\u{6c}\u{74}\u{65}\u{72}\u{73}\u{20}\u{65}\u{6e}\u{74}\u{72}\u{79}\u{20}\u{66}\u{6f}\u{72}\u{20}")))
(assert (and b_literal_27 (= literal_27 "\u{6d}\u{64}\u{35}\u{6b}\u{65}\u{79}\u{20}\u{3d}\u{20}\u{5c}\u{6e}")))
(assert (and b_literal_31 (= literal_31 "\u{4e}\u{75}\u{6d}\u{62}\u{65}\u{72}\u{20}\u{6f}\u{66}\u{20}\u{72}\u{65}\u{63}\u{6f}\u{72}\u{64}\u{73}\u{20}\u{64}\u{65}\u{6c}\u{65}\u{74}\u{65}\u{64}\u{20}\u{3d}\u{20}")))
(assert (and b_literal_40 (= literal_40 "\u{5c}\u{6e}")))
(assert (and b_literal_35 (= literal_35 "\u{44}\u{42}\u{20}\u{63}\u{61}\u{63}\u{68}\u{65}\u{5f}\u{66}\u{69}\u{6c}\u{74}\u{65}\u{72}\u{73}\u{20}\u{65}\u{6e}\u{74}\u{72}\u{79}\u{20}\u{66}\u{6f}\u{72}\u{20}")))
(assert (and b_literal_36 (= literal_36 "\u{43}\u{6f}\u{75}\u{6c}\u{64}\u{20}\u{6e}\u{6f}\u{74}\u{20}\u{64}\u{65}\u{6c}\u{65}\u{74}\u{65}\u{20}\u{44}\u{42}\u{20}\u{63}\u{61}\u{63}\u{68}\u{65}\u{5f}\u{66}\u{69}\u{6c}\u{74}\u{65}\u{72}\u{73}\u{20}\u{65}\u{6e}\u{74}\u{72}\u{79}\u{20}\u{66}\u{6f}\u{72}\u{20}")))
(assert (and b_literal_37 (= literal_37 "\u{72}\u{61}\u{77}\u{74}\u{65}\u{78}\u{74}\u{20}\u{3d}\u{20}\u{5c}\u{6e}")))
(assert (and b_literal_42 (= literal_42 "\u{5c}\u{6e}")))
(assert (and b_literal_49 (= literal_49 "\u{20}\u{6e}\u{6f}\u{74}\u{20}\u{66}\u{6f}\u{75}\u{6e}\u{64}\u{5c}\u{6e}")))
(assert (and b_literal_50 (= literal_50 "\u{5c}\u{6e}\u{62}\u{65}\u{63}\u{61}\u{75}\u{73}\u{65}\u{20}\u{69}\u{74}\u{20}\u{63}\u{6f}\u{75}\u{6c}\u{64}\u{20}\u{6e}\u{6f}\u{74}\u{20}\u{62}\u{65}\u{20}\u{66}\u{6f}\u{75}\u{6e}\u{64}\u{2e}\u{5c}\u{6e}")))
(assert (and b_literal_46 (= literal_46 "\u{74}\u{69}\u{6d}\u{65}\u{6d}\u{6f}\u{64}\u{69}\u{66}\u{69}\u{65}\u{64}\u{20}\u{3d}\u{20}\u{5c}\u{6e}")))
(assert (and b_literal_71 (= literal_71 "\u{5c}\u{6e}\u{5c}\u{6e}")))
(assert (str.in_re atkPtn (re.++ (str.to_re "<SCRIPT ") (re.++ (re.* re.allchar) (str.to_re ">")))))
(assert (= atk_sink (str.++ atk_sigmaStar_1 (str.++ atkPtn atk_sigmaStar_2))))
(assert (= b_x_9 (and (= x_9 (str.++ literal_1 sigmaStar_749) ) b_literal_1 b_sigmaStar_749) ))
(assert (= b_x_13 (and (= x_13 (str.++ x_9 literal_11) ) b_x_9 b_literal_11) ))
(assert (= b_x_19 (and (= x_19 (str.++ x_13 literal_15) ) b_x_13 b_literal_15) ))
(assert (= b_x_23 (and (= x_23 (str.++ x_19 literal_18) ) b_x_19 b_literal_18) ))
(assert (= b_x_28 (and (= x_28 (str.++ x_23 literal_22) ) b_x_23 b_literal_22) ))
(assert (= b_x_33 (or (and (= x_33 literal_30) b_literal_30) (and (= x_33 literal_29) b_literal_29) ) ))
(assert (= b_x_34 (and (= x_34 (str.++ literal_25 sigmaStar_757) ) b_literal_25 b_sigmaStar_757) ))
(assert (= b_x_38 (and (= x_38 (str.++ x_28 literal_27) ) b_x_28 b_literal_27) ))
(assert (= b_x_39 (and (= x_39 (str.++ literal_31 x_33) ) b_literal_31 b_x_33) ))
(assert (= b_x_43 (and (= x_43 (str.++ x_34 literal_40) ) b_x_34 b_literal_40) ))
(assert (= b_x_44 (and (= x_44 (str.++ literal_35 sigmaStar_762) ) b_literal_35 b_sigmaStar_762) ))
(assert (= b_x_45 (and (= x_45 (str.++ literal_36 sigmaStar_764) ) b_literal_36 b_sigmaStar_764) ))
(assert (= b_x_47 (and (= x_47 (str.++ x_38 literal_37) ) b_x_38 b_literal_37) ))
(assert (= b_x_48 (and (= x_48 (str.++ x_39 literal_42) ) b_x_39 b_literal_42) ))
(assert (= b_x_51 (and (= x_51 (str.++ x_44 literal_49) ) b_x_44 b_literal_49) ))
(assert (= b_x_52 (and (= x_52 (str.++ x_45 literal_50) ) b_x_45 b_literal_50) ))
(assert (= b_x_53 (and (= x_53 (str.++ x_47 literal_46) ) b_x_47 b_literal_46) ))
(assert (= b_x_54 (and (= x_54 (str.++ x_43 x_48) ) b_x_43 b_x_48) ))
(assert (= b_x_55 (or (and (= x_55 x_52) b_x_52) (and (= x_55 sigmaStar_270) b_sigmaStar_270) ) ))
(assert (= b_x_56 (or (and (= x_56 x_55) b_x_55) (and (= x_56 x_51) b_x_51) ) ))
(assert (= b_x_57 (or (and (= x_57 x_56) b_x_56) (and (= x_57 x_54) b_x_54) ) ))
(assert (= b_x_58 (or (and (= x_58 x_57) b_x_57) (and (= x_58 x_53) b_x_53) ) ))
(assert (= b_x_62 (and (= x_62 (str.replace x_58 "<" "&lt;") ) b_x_58) ))
(assert (= b_x_66 (and (= x_66 (str.replace x_62 ">" "&gt;") ) b_x_62) ))
(assert (= b_x_70 (and (= x_70 (str.replace x_66 """" "&quot;") ) b_x_66) ))
(assert (= b_x_72 (and (= x_72 (str.++ x_70 literal_71) ) b_x_70 b_literal_71) ))
(assert (and (= sink x_72) (= sink atk_sink) b_x_72))
(assert (= 40 (+ (str.len x_58) (str.len sink)) ) )
(check-sat)
(exit)
