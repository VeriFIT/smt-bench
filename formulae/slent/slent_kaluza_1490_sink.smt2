(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_136 () Bool)
(declare-fun T_137 () Bool)
(declare-fun T_SELECT_26 () Bool)
(declare-fun I0_458 () Int)
(declare-fun I0_462 () Int)
(declare-fun I1_458 () Int)
(declare-fun I1_462 () Int)
(declare-fun I2_458 () Int)
(declare-fun I2_462 () Int)
(declare-fun PCTEMP_LHS_120 () Int)
(declare-fun T_13b () Int)
(declare-fun NEW_DGNode_1186 () String)
(declare-fun NEW_DGNode_1187 () String)
(declare-fun NEW_DGNode_755 () String)
(declare-fun NEW_DGNode_756 () String)
(declare-fun NEW_DGNode_973 () String)
(declare-fun NEW_DGNode_974 () String)
(declare-fun PCTEMP_LHS_121 () String)
(declare-fun PCTEMP_LHS_160 () String)
(declare-fun T1_458 () String)
(declare-fun T1_462 () String)
(declare-fun T2_458 () String)
(declare-fun T2_462 () String)
(declare-fun T3_458 () String)
(declare-fun T3_462 () String)
(declare-fun T_13a () String)
(assert (= T_13a NEW_DGNode_974))
(assert (= NEW_DGNode_974 NEW_DGNode_973))
(assert (= NEW_DGNode_974 NEW_DGNode_755))
(assert (= NEW_DGNode_755 NEW_DGNode_756))
(assert (= NEW_DGNode_755 (str.++ T1_458 T2_458)))
(assert (= T2_458 (str.++ PCTEMP_LHS_121 T3_458)))
(assert (= NEW_DGNode_756 (str.++ T1_462 T2_462)))
(assert (= T2_462 (str.++ PCTEMP_LHS_160 T3_462)))
(assert (= PCTEMP_LHS_160 NEW_DGNode_1187))
(assert (= NEW_DGNode_1187 NEW_DGNode_1186))
(assert (not (str.in_re NEW_DGNode_1187 (str.to_re "+"))))
(assert (not (str.in_re NEW_DGNode_1186 (str.to_re "%"))))
(assert (not (str.in_re NEW_DGNode_973 (str.to_re "&"))))
(assert (= T_SELECT_26 (not (= PCTEMP_LHS_120 (- 1)))))
(assert T_137)
(assert (= T_137 (not T_136)))
(assert (= T_136 (= PCTEMP_LHS_120 (- 1))))
(assert (= I0_458 (- PCTEMP_LHS_120 0)))
(assert (>= PCTEMP_LHS_120 0))
(assert (>= I2_462 T_13b))
(assert (= I2_462 I1_462))
(assert (<= I2_462 I1_462))
(assert (= I0_462 (- I2_462 T_13b)))
(assert (>= T_13b 0))
(assert (= T_13b (+ PCTEMP_LHS_120 1)))
(assert (<= PCTEMP_LHS_120 I1_458))
(assert (= I2_458 I1_458))
(assert (= I1_458 (str.len T_13a))) ; len 0
(assert (= I1_462 (str.len T_13a))) ; len 0
(assert (= 0 (str.len T1_458))) ; len 1
(assert (= I0_458 (str.len PCTEMP_LHS_121))) ; len 2
(assert (= T_13b (str.len T1_462))) ; len 3
(assert (= I0_462 (str.len PCTEMP_LHS_160))) ; len 4
(check-sat)
(exit)
