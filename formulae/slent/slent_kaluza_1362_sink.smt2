(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_9a () Bool)
(declare-fun T_9b () Bool)
(declare-fun T_SELECT_14 () Bool)
(declare-fun I0_230 () Int)
(declare-fun I0_234 () Int)
(declare-fun I1_230 () Int)
(declare-fun I1_234 () Int)
(declare-fun I2_230 () Int)
(declare-fun I2_234 () Int)
(declare-fun PCTEMP_LHS_60 () Int)
(declare-fun T_9f () Int)
(declare-fun NEW_DGNode_735 () String)
(declare-fun NEW_DGNode_736 () String)
(declare-fun PCTEMP_LHS_64 () String)
(assert (= PCTEMP_LHS_64 NEW_DGNode_736))
(assert (= NEW_DGNode_736 NEW_DGNode_735))
(assert (not (str.in_re NEW_DGNode_736 (str.to_re "+"))))
(assert (not (str.in_re NEW_DGNode_735 (str.to_re "%"))))
(assert (= T_SELECT_14 (not (= PCTEMP_LHS_60 (- 1)))))
(assert T_9b)
(assert (= T_9b (not T_9a)))
(assert (= T_9a (= PCTEMP_LHS_60 (- 1))))
(assert (= I0_230 (- PCTEMP_LHS_60 0)))
(assert (>= PCTEMP_LHS_60 0))
(assert (= I2_230 I1_230))
(assert (<= PCTEMP_LHS_60 I1_230))
(assert (= T_9f (+ PCTEMP_LHS_60 1)))
(assert (>= T_9f 0))
(assert (>= I2_234 T_9f))
(assert (= I2_234 I1_234))
(assert (<= I2_234 I1_234))
(assert (= I0_234 (- I2_234 T_9f)))
(assert (= I0_234 (str.len PCTEMP_LHS_64))) ; len 0
(check-sat)
(exit)
