(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_SELECT_17 () Bool)
(declare-fun T_c1 () Bool)
(declare-fun T_c2 () Bool)
(declare-fun I0_287 () Int)
(declare-fun I0_291 () Int)
(declare-fun I1_287 () Int)
(declare-fun I1_291 () Int)
(declare-fun I2_287 () Int)
(declare-fun I2_291 () Int)
(declare-fun PCTEMP_LHS_75 () Int)
(declare-fun T_c6 () Int)
(declare-fun NEW_DGNode_1460 () String)
(declare-fun NEW_DGNode_1461 () String)
(declare-fun NEW_DGNode_1592 () String)
(declare-fun NEW_DGNode_1593 () String)
(declare-fun NEW_DGNode_557 () String)
(declare-fun NEW_DGNode_558 () String)
(declare-fun PCTEMP_LHS_76 () String)
(declare-fun PCTEMP_LHS_79 () String)
(declare-fun T1_287 () String)
(declare-fun T1_291 () String)
(declare-fun T2_287 () String)
(declare-fun T2_291 () String)
(declare-fun T3_287 () String)
(declare-fun T3_291 () String)
(declare-fun T_c5 () String)
(assert (= T_c5 NEW_DGNode_1461))
(assert (= NEW_DGNode_1461 NEW_DGNode_1460))
(assert (= NEW_DGNode_1461 NEW_DGNode_557))
(assert (= NEW_DGNode_557 NEW_DGNode_558))
(assert (= NEW_DGNode_557 (str.++ T1_287 T2_287)))
(assert (= T2_287 (str.++ PCTEMP_LHS_76 T3_287)))
(assert (= NEW_DGNode_558 (str.++ T1_291 T2_291)))
(assert (= T2_291 (str.++ PCTEMP_LHS_79 T3_291)))
(assert (= PCTEMP_LHS_79 NEW_DGNode_1593))
(assert (= NEW_DGNode_1593 NEW_DGNode_1592))
(assert (not (str.in_re NEW_DGNode_1593 (str.to_re "+"))))
(assert (not (str.in_re NEW_DGNode_1592 (str.to_re "%"))))
(assert (not (str.in_re NEW_DGNode_1460 (str.to_re "&"))))
(assert (= T_SELECT_17 (not (= PCTEMP_LHS_75 (- 1)))))
(assert T_c2)
(assert (= T_c2 (not T_c1)))
(assert (= T_c1 (= PCTEMP_LHS_75 (- 1))))
(assert (= I0_287 (- PCTEMP_LHS_75 0)))
(assert (>= PCTEMP_LHS_75 0))
(assert (>= I2_291 T_c6))
(assert (= I2_291 I1_291))
(assert (<= I2_291 I1_291))
(assert (= I0_291 (- I2_291 T_c6)))
(assert (>= T_c6 0))
(assert (= T_c6 (+ PCTEMP_LHS_75 1)))
(assert (<= PCTEMP_LHS_75 I1_287))
(assert (= I2_287 I1_287))
(assert (= I1_287 (str.len T_c5))) ; len 0
(assert (= I1_291 (str.len T_c5))) ; len 0
(assert (= 0 (str.len T1_287))) ; len 1
(assert (= I0_287 (str.len PCTEMP_LHS_76))) ; len 2
(assert (= T_c6 (str.len T1_291))) ; len 3
(assert (= I0_291 (str.len PCTEMP_LHS_79))) ; len 4
(check-sat)
(exit)
