(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_11 () Bool)
(declare-fun T_13 () Bool)
(declare-fun T_14 () Bool)
(declare-fun T_SELECT_4 () Bool)
(declare-fun T_SELECT_5 () Bool)
(declare-fun I0_29 () Int)
(declare-fun I1_29 () Int)
(declare-fun I2_29 () Int)
(declare-fun PCTEMP_LHS_4 () Int)
(declare-fun PCTEMP_LHS_5 () Int)
(declare-fun T_15 () Int)
(declare-fun T_16 () Int)
(declare-fun M0_47 () String)
(declare-fun M1_47 () String)
(declare-fun M2_47 () String)
(declare-fun M3_47 () String)
(declare-fun M4_47 () String)
(declare-fun P0_47 () String)
(declare-fun P1_47 () String)
(declare-fun P2_47 () String)
(declare-fun P3_47 () String)
(declare-fun P4_47 () String)
(declare-fun PCTEMP_LHS_11_idx_0 () String)
(declare-fun PCTEMP_LHS_11_idx_1 () String)
(declare-fun PCTEMP_LHS_11_idx_2 () String)
(declare-fun PCTEMP_LHS_11_idx_3 () String)
(declare-fun PCTEMP_LHS_11_idx_4 () String)
(declare-fun T0_47 () String)
(declare-fun T1_47 () String)
(declare-fun T2_47 () String)
(declare-fun T3_47 () String)
(declare-fun T4_47 () String)
(declare-fun T5_47 () String)
(assert (= T0_47 (str.++ P0_47 T1_47)))
(assert (= P0_47 (str.++ PCTEMP_LHS_11_idx_0 M0_47)))
(assert (not (str.in_re PCTEMP_LHS_11_idx_0 (str.to_re "."))))
(assert (= M0_47 "\."))
(assert (= T1_47 (str.++ P1_47 T2_47)))
(assert (= P1_47 (str.++ PCTEMP_LHS_11_idx_1 M1_47)))
(assert (not (str.in_re PCTEMP_LHS_11_idx_1 (str.to_re "."))))
(assert (= M1_47 "\."))
(assert (= T2_47 (str.++ P2_47 T3_47)))
(assert (= P2_47 (str.++ PCTEMP_LHS_11_idx_2 M2_47)))
(assert (not (str.in_re PCTEMP_LHS_11_idx_2 (str.to_re "."))))
(assert (= M2_47 "\."))
(assert (= T3_47 (str.++ P3_47 T4_47)))
(assert (= P3_47 (str.++ PCTEMP_LHS_11_idx_3 M3_47)))
(assert (not (str.in_re PCTEMP_LHS_11_idx_3 (str.to_re "."))))
(assert (= M3_47 "\."))
(assert (= T4_47 (str.++ P4_47 T5_47)))
(assert (= P4_47 (str.++ PCTEMP_LHS_11_idx_4 M4_47)))
(assert (not (str.in_re PCTEMP_LHS_11_idx_4 (str.to_re "."))))
(assert (= M4_47 "\."))
(assert (= T_SELECT_5 (not (= PCTEMP_LHS_5 (- 1)))))
(assert T_14)
(assert (= T_14 (not T_13)))
(assert (= T_13 (< PCTEMP_LHS_5 0)))
(assert (= T_SELECT_4 (not (= PCTEMP_LHS_4 (- 1)))))
(assert T_11)
(assert (= T_11 (< (- 1) PCTEMP_LHS_4)))
(assert (= T_15 (+ PCTEMP_LHS_4 6)))
(assert (= T_16 (+ T_15 1)))
(assert (>= T_16 0))
(assert (>= PCTEMP_LHS_5 T_16))
(assert (= I2_29 I1_29))
(assert (<= PCTEMP_LHS_5 I1_29))
(assert (= I0_29 (- PCTEMP_LHS_5 T_16)))
(assert (= I0_29 (str.len T0_47))) ; len 0
(check-sat)
(exit)
