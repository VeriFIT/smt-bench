(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_SELECT_15 () Bool)
(declare-fun T_a7 () Bool)
(declare-fun T_a8 () Bool)
(declare-fun I0_249 () Int)
(declare-fun I0_253 () Int)
(declare-fun I1_249 () Int)
(declare-fun I1_253 () Int)
(declare-fun I2_249 () Int)
(declare-fun I2_253 () Int)
(declare-fun PCTEMP_LHS_65 () Int)
(declare-fun T_ac () Int)
(declare-fun NEW_DGNode_729 () String)
(declare-fun NEW_DGNode_730 () String)
(declare-fun PCTEMP_LHS_69 () String)
(assert (= PCTEMP_LHS_69 NEW_DGNode_730))
(assert (= NEW_DGNode_730 NEW_DGNode_729))
(assert (not (str.in_re NEW_DGNode_730 (str.to_re "+"))))
(assert (not (str.in_re NEW_DGNode_729 (str.to_re "%"))))
(assert (= T_SELECT_15 (not (= PCTEMP_LHS_65 (- 1)))))
(assert T_a8)
(assert (= T_a8 (not T_a7)))
(assert (= T_a7 (= PCTEMP_LHS_65 (- 1))))
(assert (= I0_249 (- PCTEMP_LHS_65 0)))
(assert (>= PCTEMP_LHS_65 0))
(assert (= I2_249 I1_249))
(assert (<= PCTEMP_LHS_65 I1_249))
(assert (= T_ac (+ PCTEMP_LHS_65 1)))
(assert (>= T_ac 0))
(assert (>= I2_253 T_ac))
(assert (= I2_253 I1_253))
(assert (<= I2_253 I1_253))
(assert (= I0_253 (- I2_253 T_ac)))
(assert (= I0_253 (str.len PCTEMP_LHS_69))) ; len 0
(check-sat)
(exit)
