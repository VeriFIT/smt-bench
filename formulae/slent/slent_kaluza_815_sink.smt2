(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_26 () Bool)
(declare-fun T_27 () Bool)
(declare-fun T_28 () Bool)
(declare-fun T_29 () Bool)
(declare-fun T_2e () Bool)
(declare-fun T_2f () Bool)
(declare-fun T_31 () Bool)
(declare-fun T_32 () Bool)
(declare-fun T_35 () Bool)
(declare-fun T_36 () Bool)
(declare-fun T_34 () Int)
(declare-fun M0_55 () String)
(declare-fun M1_55 () String)
(declare-fun M2_55 () String)
(declare-fun M3_55 () String)
(declare-fun M4_55 () String)
(declare-fun NEW_DGNode_115 () String)
(declare-fun NEW_DGNode_116 () String)
(declare-fun NEW_DGNode_164 () String)
(declare-fun NEW_DGNode_165 () String)
(declare-fun NEW_DGNode_174 () String)
(declare-fun NEW_DGNode_175 () String)
(declare-fun NEW_DGNode_215 () String)
(declare-fun NEW_DGNode_216 () String)
(declare-fun P0_55 () String)
(declare-fun P1_55 () String)
(declare-fun P2_55 () String)
(declare-fun P3_55 () String)
(declare-fun P4_55 () String)
(declare-fun PCTEMP_LHS_13_idx_1 () String)
(declare-fun PCTEMP_LHS_13_idx_2 () String)
(declare-fun PCTEMP_LHS_13_idx_3 () String)
(declare-fun PCTEMP_LHS_13_idx_4 () String)
(declare-fun T0_55 () String)
(declare-fun T1_55 () String)
(declare-fun T2_55 () String)
(declare-fun T3_55 () String)
(declare-fun T4_55 () String)
(declare-fun T5_55 () String)
(declare-fun T_33 () String)
(assert (= T0_55 NEW_DGNode_164))
(assert (= NEW_DGNode_164 NEW_DGNode_165))
(assert (= NEW_DGNode_164 NEW_DGNode_115))
(assert (= NEW_DGNode_115 NEW_DGNode_116))
(assert (= NEW_DGNode_115 ""))
(assert (= NEW_DGNode_116 "-"))
(assert (= NEW_DGNode_165 (str.++ P0_55 T1_55)))
(assert (= P0_55 (str.++ T_33 M0_55)))
(assert (= T_33 NEW_DGNode_216))
(assert (= NEW_DGNode_216 NEW_DGNode_215))
(assert (= NEW_DGNode_216 NEW_DGNode_174))
(assert (= NEW_DGNode_174 NEW_DGNode_175))
(assert (= NEW_DGNode_174 ""))
(assert (= NEW_DGNode_175 "-"))
(assert (not (str.in_re NEW_DGNode_215 (str.to_re "."))))
(assert (= M0_55 "\."))
(assert (= T1_55 (str.++ P1_55 T2_55)))
(assert (= P1_55 (str.++ PCTEMP_LHS_13_idx_1 M1_55)))
(assert (not (str.in_re PCTEMP_LHS_13_idx_1 (str.to_re "."))))
(assert (= M1_55 "\."))
(assert (= T2_55 (str.++ P2_55 T3_55)))
(assert (= P2_55 (str.++ PCTEMP_LHS_13_idx_2 M2_55)))
(assert (not (str.in_re PCTEMP_LHS_13_idx_2 (str.to_re "."))))
(assert (= M2_55 "\."))
(assert (= T3_55 (str.++ P3_55 T4_55)))
(assert (= P3_55 (str.++ PCTEMP_LHS_13_idx_3 M3_55)))
(assert (not (str.in_re PCTEMP_LHS_13_idx_3 (str.to_re "."))))
(assert (= M3_55 "\."))
(assert (= T4_55 (str.++ P4_55 T5_55)))
(assert (= P4_55 (str.++ PCTEMP_LHS_13_idx_4 M4_55)))
(assert (not (str.in_re PCTEMP_LHS_13_idx_4 (str.to_re "."))))
(assert (= M4_55 "\."))
(assert T_26)
(assert T_27)
(assert (= T_27 (not T_26)))
(assert T_28)
(assert T_29)
(assert (= T_29 (not T_28)))
(assert T_36)
(assert (= T_36 (not T_35)))
(assert (= T_35 (< 0 T_34)))
(assert (= T_34 (str.len T_33))) ; len 0
(assert T_2e)
(assert T_2f)
(assert (= T_2f (not T_2e)))
(assert T_31)
(assert T_32)
(assert (= T_32 (not T_31)))
(check-sat)
(exit)
