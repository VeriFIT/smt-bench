(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_102 () Bool)
(declare-fun T_103 () Bool)
(declare-fun T_19d () Bool)
(declare-fun T_19f () Bool)
(declare-fun T_1a0 () Bool)
(declare-fun T_SELECT_22 () Bool)
(declare-fun I0_382 () Int)
(declare-fun I0_386 () Int)
(declare-fun I1_382 () Int)
(declare-fun I1_386 () Int)
(declare-fun I2_382 () Int)
(declare-fun I2_386 () Int)
(declare-fun PCTEMP_LHS_100 () Int)
(declare-fun T_107 () Int)
(declare-fun T_19e () Int)
(declare-fun NEW_DGNode_1159 () String)
(declare-fun NEW_DGNode_1160 () String)
(declare-fun NEW_DGNode_1162 () String)
(declare-fun NEW_DGNode_1163 () String)
(declare-fun PCTEMP_LHS_156 () String)
(assert (= PCTEMP_LHS_156 NEW_DGNode_1163))
(assert (= NEW_DGNode_1163 NEW_DGNode_1162))
(assert (= NEW_DGNode_1163 NEW_DGNode_1160))
(assert (= NEW_DGNode_1160 NEW_DGNode_1159))
(assert (not (str.in_re NEW_DGNode_1160 (str.to_re ""))))
(assert (not (str.in_re NEW_DGNode_1159 (str.to_re "+"))))
(assert (not (str.in_re NEW_DGNode_1162 (str.to_re "%"))))
(assert (= T_SELECT_22 (not (= PCTEMP_LHS_100 (- 1)))))
(assert T_103)
(assert (= T_103 (not T_102)))
(assert (= T_102 (= PCTEMP_LHS_100 (- 1))))
(assert (= I0_382 (- PCTEMP_LHS_100 0)))
(assert (>= PCTEMP_LHS_100 0))
(assert (= I2_382 I1_382))
(assert (<= PCTEMP_LHS_100 I1_382))
(assert (= T_107 (+ PCTEMP_LHS_100 1)))
(assert (>= T_107 0))
(assert (>= I2_386 T_107))
(assert (= I2_386 I1_386))
(assert (<= I2_386 I1_386))
(assert (= I0_386 (- I2_386 T_107)))
(assert (= I0_386 (str.len PCTEMP_LHS_156))) ; len 0
(assert T_1a0)
(assert (= T_1a0 (not T_19f)))
(assert (= T_19f (< 0 T_19e)))
(assert (= T_19e (str.len PCTEMP_LHS_156))) ; len 0
(assert T_19d)
(check-sat)
(exit)
