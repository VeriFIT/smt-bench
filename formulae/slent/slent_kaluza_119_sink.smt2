(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_SELECT_21 () Bool)
(declare-fun T_f5 () Bool)
(declare-fun T_f6 () Bool)
(declare-fun I0_363 () Int)
(declare-fun I0_367 () Int)
(declare-fun I1_363 () Int)
(declare-fun I1_367 () Int)
(declare-fun I2_363 () Int)
(declare-fun I2_367 () Int)
(declare-fun PCTEMP_LHS_95 () Int)
(declare-fun T_fa () Int)
(declare-fun T0_358 () String)
(declare-fun T1_358 () String)
(declare-fun T_f3 () String)
(assert (= T_f3 (str.++ T0_358 T1_358)))
(assert (not (str.in_re T1_358 (str.to_re "="))))
(assert T_f6)
(assert (= T_f6 (not T_f5)))
(assert (= T_f5 (= PCTEMP_LHS_95 (- 1))))
(assert (= I0_363 (- PCTEMP_LHS_95 0)))
(assert (>= PCTEMP_LHS_95 0))
(assert (= I2_363 I1_363))
(assert (<= PCTEMP_LHS_95 I1_363))
(assert (>= I2_367 T_fa))
(assert (= I2_367 I1_367))
(assert (<= I2_367 I1_367))
(assert (= I0_367 (- I2_367 T_fa)))
(assert (>= T_fa 0))
(assert (= T_fa (+ PCTEMP_LHS_95 1)))
(assert (= PCTEMP_LHS_95 (- 1)))
(assert (= T_SELECT_21 (not (= PCTEMP_LHS_95 (- 1)))))
(assert (= 0 (str.len T0_358))) ; len 0
(assert (not T_SELECT_21))
(check-sat)
(exit)
