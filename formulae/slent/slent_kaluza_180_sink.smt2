(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_SELECT_18 () Bool)
(declare-fun T_ce () Bool)
(declare-fun T_cf () Bool)
(declare-fun I0_306 () Int)
(declare-fun I0_310 () Int)
(declare-fun I1_306 () Int)
(declare-fun I1_310 () Int)
(declare-fun I2_306 () Int)
(declare-fun I2_310 () Int)
(declare-fun PCTEMP_LHS_80 () Int)
(declare-fun T_d3 () Int)
(declare-fun NEW_DGNode_747 () String)
(declare-fun NEW_DGNode_748 () String)
(declare-fun PCTEMP_LHS_84 () String)
(assert (= PCTEMP_LHS_84 NEW_DGNode_748))
(assert (= NEW_DGNode_748 NEW_DGNode_747))
(assert (not (str.in_re NEW_DGNode_748 (str.to_re "+"))))
(assert (not (str.in_re NEW_DGNode_747 (str.to_re "%"))))
(assert (= T_SELECT_18 (not (= PCTEMP_LHS_80 (- 1)))))
(assert T_cf)
(assert (= T_cf (not T_ce)))
(assert (= T_ce (= PCTEMP_LHS_80 (- 1))))
(assert (= I0_306 (- PCTEMP_LHS_80 0)))
(assert (>= PCTEMP_LHS_80 0))
(assert (= I2_306 I1_306))
(assert (<= PCTEMP_LHS_80 I1_306))
(assert (= T_d3 (+ PCTEMP_LHS_80 1)))
(assert (>= T_d3 0))
(assert (>= I2_310 T_d3))
(assert (= I2_310 I1_310))
(assert (<= I2_310 I1_310))
(assert (= I0_310 (- I2_310 T_d3)))
(assert (= I0_310 (str.len PCTEMP_LHS_84))) ; len 0
(check-sat)
(exit)
