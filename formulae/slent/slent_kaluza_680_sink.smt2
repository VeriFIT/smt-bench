(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_SELECT_4 () Bool)
(declare-fun T_SELECT_5 () Bool)
(declare-fun T_c () Bool)
(declare-fun T_e () Bool)
(declare-fun I0_18 () Int)
(declare-fun PCTEMP_LHS_4 () Int)
(declare-fun PCTEMP_LHS_5 () Int)
(declare-fun T0_18 () String)
(declare-fun T1_18 () String)
(declare-fun T2_18 () String)
(declare-fun T3_18 () String)
(declare-fun T4_18 () String)
(declare-fun T5_18 () String)
(declare-fun var_0xINPUT_12454 () String)
(assert (= var_0xINPUT_12454 (str.++ T0_18 T1_18)))
(assert (= T1_18 (str.++ T2_18 T3_18)))
(assert (= T2_18 (str.++ T4_18 T5_18)))
(assert (not (str.in_re T4_18 (str.to_re ";"))))
(assert (= T5_18 ";"))
(assert T_e)
(assert (= T_e (< PCTEMP_LHS_5 0)))
(assert (= T_SELECT_4 (not (= PCTEMP_LHS_4 (- 1)))))
(assert T_c)
(assert (= T_c (< (- 1) PCTEMP_LHS_4)))
(assert (= PCTEMP_LHS_5 (+ I0_18 PCTEMP_LHS_4)))
(assert (= T_SELECT_5 (not (= PCTEMP_LHS_5 (- 1)))))
(assert (= PCTEMP_LHS_4 (str.len T0_18))) ; len 0
(assert (= I0_18 (str.len T4_18))) ; len 1
(assert T_SELECT_5)
(check-sat)
(exit)
