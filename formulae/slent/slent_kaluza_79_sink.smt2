(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_SELECT_20 () Bool)
(declare-fun T_e8 () Bool)
(declare-fun T_e9 () Bool)
(declare-fun I0_344 () Int)
(declare-fun I0_348 () Int)
(declare-fun I1_344 () Int)
(declare-fun I1_348 () Int)
(declare-fun I2_344 () Int)
(declare-fun I2_348 () Int)
(declare-fun PCTEMP_LHS_90 () Int)
(declare-fun T_ed () Int)
(declare-fun NEW_DGNode_774 () String)
(declare-fun NEW_DGNode_775 () String)
(declare-fun PCTEMP_LHS_94 () String)
(assert (= PCTEMP_LHS_94 NEW_DGNode_775))
(assert (= NEW_DGNode_775 NEW_DGNode_774))
(assert (not (str.in_re NEW_DGNode_775 (str.to_re "+"))))
(assert (not (str.in_re NEW_DGNode_774 (str.to_re "%"))))
(assert (= T_SELECT_20 (not (= PCTEMP_LHS_90 (- 1)))))
(assert T_e9)
(assert (= T_e9 (not T_e8)))
(assert (= T_e8 (= PCTEMP_LHS_90 (- 1))))
(assert (= I0_344 (- PCTEMP_LHS_90 0)))
(assert (>= PCTEMP_LHS_90 0))
(assert (= I2_344 I1_344))
(assert (<= PCTEMP_LHS_90 I1_344))
(assert (= T_ed (+ PCTEMP_LHS_90 1)))
(assert (>= T_ed 0))
(assert (>= I2_348 T_ed))
(assert (= I2_348 I1_348))
(assert (<= I2_348 I1_348))
(assert (= I0_348 (- I2_348 T_ed)))
(assert (= I0_348 (str.len PCTEMP_LHS_94))) ; len 0
(check-sat)
(exit)
