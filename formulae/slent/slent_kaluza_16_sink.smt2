(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_3 () Bool)
(declare-fun T_4 () Bool)
(declare-fun T_SELECT_1 () Bool)
(declare-fun I0_3 () Int)
(declare-fun PCTEMP_LHS_1 () Int)
(declare-fun T0_3 () String)
(declare-fun T1_3 () String)
(declare-fun T2_3 () String)
(declare-fun T3_3 () String)
(declare-fun T4_3 () String)
(declare-fun T5_3 () String)
(declare-fun var_0xINPUT_5121 () String)
(assert (= var_0xINPUT_5121 (str.++ T0_3 T1_3)))
(assert (= T1_3 (str.++ T2_3 T3_3)))
(assert (= T2_3 (str.++ T4_3 T5_3)))
(assert (not (str.in_re T4_3 (str.to_re "?"))))
(assert (= T5_3 "?"))
(assert T_4)
(assert (= T_4 (not T_3)))
(assert (= T_3 (= PCTEMP_LHS_1 (- 1))))
(assert (= PCTEMP_LHS_1 (+ I0_3 0)))
(assert (= T_SELECT_1 (not (= PCTEMP_LHS_1 (- 1)))))
(assert (= 0 (str.len T0_3))) ; len 0
(assert (= I0_3 (str.len T4_3))) ; len 1
(assert T_SELECT_1)
(check-sat)
(exit)
