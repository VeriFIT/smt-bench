(set-info :smt-lib-version 2.6)
(set-logic QF_SLIA)
(set-info :source |
Generated by: Hung-En Wang, Shih-Yu Chen, Fang Yu, and Jie-Hong R. Jiang
Generated on: 2019-02-28
Generator: modified from Kaluza benchmarks
Application: Security analysis of string manipulating web applications with string length constraints
Target solver: ABC, CVC4, Norn, S3P, Trau, Z3-str3
Publication:
Hung-En Wang, Shih-Yu Chen, Fang Yu, Jie-Hong R. Jiang:
A symbolic model checking approach to the analysis of string and length constraints. ASE 2018: 623-633
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)

(declare-fun T_18 () Bool)
(declare-fun T_19 () Bool)
(declare-fun T_SELECT_4 () Bool)
(declare-fun I0_40 () Int)
(declare-fun I0_44 () Int)
(declare-fun I1_40 () Int)
(declare-fun I1_44 () Int)
(declare-fun I2_40 () Int)
(declare-fun I2_44 () Int)
(declare-fun PCTEMP_LHS_10 () Int)
(declare-fun T_1d () Int)
(declare-fun NEW_DGNode_389 () String)
(declare-fun NEW_DGNode_390 () String)
(declare-fun PCTEMP_LHS_14 () String)
(assert (= PCTEMP_LHS_14 NEW_DGNode_390))
(assert (= NEW_DGNode_390 NEW_DGNode_389))
(assert (not (str.in_re NEW_DGNode_390 (str.to_re "+"))))
(assert (not (str.in_re NEW_DGNode_389 (str.to_re "%"))))
(assert (= T_SELECT_4 (not (= PCTEMP_LHS_10 (- 1)))))
(assert T_19)
(assert (= T_19 (not T_18)))
(assert (= T_18 (= PCTEMP_LHS_10 (- 1))))
(assert (= I0_40 (- PCTEMP_LHS_10 0)))
(assert (>= PCTEMP_LHS_10 0))
(assert (= I2_40 I1_40))
(assert (<= PCTEMP_LHS_10 I1_40))
(assert (= T_1d (+ PCTEMP_LHS_10 1)))
(assert (>= T_1d 0))
(assert (>= I2_44 T_1d))
(assert (= I2_44 I1_44))
(assert (<= I2_44 I1_44))
(assert (= I0_44 (- I2_44 T_1d)))
(assert (= I0_44 (str.len PCTEMP_LHS_14))) ; len 0
(check-sat)
(exit)
